/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.node;

import br.com.ufs.pascalito.analysis.*;

@SuppressWarnings("nls")
public final class AStringFator extends PFator
{
    private TConstString _constString_;

    public AStringFator()
    {
        // Constructor
    }

    public AStringFator(
        @SuppressWarnings("hiding") TConstString _constString_)
    {
        // Constructor
        setConstString(_constString_);

    }

    @Override
    public Object clone()
    {
        return new AStringFator(
            cloneNode(this._constString_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStringFator(this);
    }

    public TConstString getConstString()
    {
        return this._constString_;
    }

    public void setConstString(TConstString node)
    {
        if(this._constString_ != null)
        {
            this._constString_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._constString_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._constString_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._constString_ == child)
        {
            this._constString_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._constString_ == oldChild)
        {
            setConstString((TConstString) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
