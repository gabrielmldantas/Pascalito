/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.node;

import br.com.ufs.pascalito.analysis.*;

@SuppressWarnings("nls")
public final class AIfSentenca extends PSentenca
{
    private PExpressao _expressao_;
    private PSentenca _if_;
    private PSentenca _else_;

    public AIfSentenca()
    {
        // Constructor
    }

    public AIfSentenca(
        @SuppressWarnings("hiding") PExpressao _expressao_,
        @SuppressWarnings("hiding") PSentenca _if_,
        @SuppressWarnings("hiding") PSentenca _else_)
    {
        // Constructor
        setExpressao(_expressao_);

        setIf(_if_);

        setElse(_else_);

    }

    @Override
    public Object clone()
    {
        return new AIfSentenca(
            cloneNode(this._expressao_),
            cloneNode(this._if_),
            cloneNode(this._else_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfSentenca(this);
    }

    public PExpressao getExpressao()
    {
        return this._expressao_;
    }

    public void setExpressao(PExpressao node)
    {
        if(this._expressao_ != null)
        {
            this._expressao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressao_ = node;
    }

    public PSentenca getIf()
    {
        return this._if_;
    }

    public void setIf(PSentenca node)
    {
        if(this._if_ != null)
        {
            this._if_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._if_ = node;
    }

    public PSentenca getElse()
    {
        return this._else_;
    }

    public void setElse(PSentenca node)
    {
        if(this._else_ != null)
        {
            this._else_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._else_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expressao_)
            + toString(this._if_)
            + toString(this._else_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expressao_ == child)
        {
            this._expressao_ = null;
            return;
        }

        if(this._if_ == child)
        {
            this._if_ = null;
            return;
        }

        if(this._else_ == child)
        {
            this._else_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expressao_ == oldChild)
        {
            setExpressao((PExpressao) newChild);
            return;
        }

        if(this._if_ == oldChild)
        {
            setIf((PSentenca) newChild);
            return;
        }

        if(this._else_ == oldChild)
        {
            setElse((PSentenca) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
