/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.node;

import br.com.ufs.pascalito.analysis.*;

@SuppressWarnings("nls")
public final class AMultiploDefinicaoTipos extends PDefinicaoTipos
{
    private PDefinicaoTipos _definicaoTipos_;
    private TVirgula _virgula_;
    private PDenotadorTipo _denotadorTipo_;

    public AMultiploDefinicaoTipos()
    {
        // Constructor
    }

    public AMultiploDefinicaoTipos(
        @SuppressWarnings("hiding") PDefinicaoTipos _definicaoTipos_,
        @SuppressWarnings("hiding") TVirgula _virgula_,
        @SuppressWarnings("hiding") PDenotadorTipo _denotadorTipo_)
    {
        // Constructor
        setDefinicaoTipos(_definicaoTipos_);

        setVirgula(_virgula_);

        setDenotadorTipo(_denotadorTipo_);

    }

    @Override
    public Object clone()
    {
        return new AMultiploDefinicaoTipos(
            cloneNode(this._definicaoTipos_),
            cloneNode(this._virgula_),
            cloneNode(this._denotadorTipo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiploDefinicaoTipos(this);
    }

    public PDefinicaoTipos getDefinicaoTipos()
    {
        return this._definicaoTipos_;
    }

    public void setDefinicaoTipos(PDefinicaoTipos node)
    {
        if(this._definicaoTipos_ != null)
        {
            this._definicaoTipos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._definicaoTipos_ = node;
    }

    public TVirgula getVirgula()
    {
        return this._virgula_;
    }

    public void setVirgula(TVirgula node)
    {
        if(this._virgula_ != null)
        {
            this._virgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virgula_ = node;
    }

    public PDenotadorTipo getDenotadorTipo()
    {
        return this._denotadorTipo_;
    }

    public void setDenotadorTipo(PDenotadorTipo node)
    {
        if(this._denotadorTipo_ != null)
        {
            this._denotadorTipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._denotadorTipo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._definicaoTipos_)
            + toString(this._virgula_)
            + toString(this._denotadorTipo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._definicaoTipos_ == child)
        {
            this._definicaoTipos_ = null;
            return;
        }

        if(this._virgula_ == child)
        {
            this._virgula_ = null;
            return;
        }

        if(this._denotadorTipo_ == child)
        {
            this._denotadorTipo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._definicaoTipos_ == oldChild)
        {
            setDefinicaoTipos((PDefinicaoTipos) newChild);
            return;
        }

        if(this._virgula_ == oldChild)
        {
            setVirgula((TVirgula) newChild);
            return;
        }

        if(this._denotadorTipo_ == oldChild)
        {
            setDenotadorTipo((PDenotadorTipo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
