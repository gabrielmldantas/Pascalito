/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.node;

import br.com.ufs.pascalito.analysis.*;

@SuppressWarnings("nls")
public final class ATipoArray extends PTipoArray
{
    private TArray _array_;
    private TAbreColchete _abreColchete_;
    private PTiposOrdinais _tiposOrdinais_;
    private TFechaColchete _fechaColchete_;
    private TOf _of_;
    private PDenotadorTipo _denotadorTipo_;

    public ATipoArray()
    {
        // Constructor
    }

    public ATipoArray(
        @SuppressWarnings("hiding") TArray _array_,
        @SuppressWarnings("hiding") TAbreColchete _abreColchete_,
        @SuppressWarnings("hiding") PTiposOrdinais _tiposOrdinais_,
        @SuppressWarnings("hiding") TFechaColchete _fechaColchete_,
        @SuppressWarnings("hiding") TOf _of_,
        @SuppressWarnings("hiding") PDenotadorTipo _denotadorTipo_)
    {
        // Constructor
        setArray(_array_);

        setAbreColchete(_abreColchete_);

        setTiposOrdinais(_tiposOrdinais_);

        setFechaColchete(_fechaColchete_);

        setOf(_of_);

        setDenotadorTipo(_denotadorTipo_);

    }

    @Override
    public Object clone()
    {
        return new ATipoArray(
            cloneNode(this._array_),
            cloneNode(this._abreColchete_),
            cloneNode(this._tiposOrdinais_),
            cloneNode(this._fechaColchete_),
            cloneNode(this._of_),
            cloneNode(this._denotadorTipo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATipoArray(this);
    }

    public TArray getArray()
    {
        return this._array_;
    }

    public void setArray(TArray node)
    {
        if(this._array_ != null)
        {
            this._array_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._array_ = node;
    }

    public TAbreColchete getAbreColchete()
    {
        return this._abreColchete_;
    }

    public void setAbreColchete(TAbreColchete node)
    {
        if(this._abreColchete_ != null)
        {
            this._abreColchete_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreColchete_ = node;
    }

    public PTiposOrdinais getTiposOrdinais()
    {
        return this._tiposOrdinais_;
    }

    public void setTiposOrdinais(PTiposOrdinais node)
    {
        if(this._tiposOrdinais_ != null)
        {
            this._tiposOrdinais_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tiposOrdinais_ = node;
    }

    public TFechaColchete getFechaColchete()
    {
        return this._fechaColchete_;
    }

    public void setFechaColchete(TFechaColchete node)
    {
        if(this._fechaColchete_ != null)
        {
            this._fechaColchete_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaColchete_ = node;
    }

    public TOf getOf()
    {
        return this._of_;
    }

    public void setOf(TOf node)
    {
        if(this._of_ != null)
        {
            this._of_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._of_ = node;
    }

    public PDenotadorTipo getDenotadorTipo()
    {
        return this._denotadorTipo_;
    }

    public void setDenotadorTipo(PDenotadorTipo node)
    {
        if(this._denotadorTipo_ != null)
        {
            this._denotadorTipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._denotadorTipo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._array_)
            + toString(this._abreColchete_)
            + toString(this._tiposOrdinais_)
            + toString(this._fechaColchete_)
            + toString(this._of_)
            + toString(this._denotadorTipo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._array_ == child)
        {
            this._array_ = null;
            return;
        }

        if(this._abreColchete_ == child)
        {
            this._abreColchete_ = null;
            return;
        }

        if(this._tiposOrdinais_ == child)
        {
            this._tiposOrdinais_ = null;
            return;
        }

        if(this._fechaColchete_ == child)
        {
            this._fechaColchete_ = null;
            return;
        }

        if(this._of_ == child)
        {
            this._of_ = null;
            return;
        }

        if(this._denotadorTipo_ == child)
        {
            this._denotadorTipo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._array_ == oldChild)
        {
            setArray((TArray) newChild);
            return;
        }

        if(this._abreColchete_ == oldChild)
        {
            setAbreColchete((TAbreColchete) newChild);
            return;
        }

        if(this._tiposOrdinais_ == oldChild)
        {
            setTiposOrdinais((PTiposOrdinais) newChild);
            return;
        }

        if(this._fechaColchete_ == oldChild)
        {
            setFechaColchete((TFechaColchete) newChild);
            return;
        }

        if(this._of_ == oldChild)
        {
            setOf((TOf) newChild);
            return;
        }

        if(this._denotadorTipo_ == oldChild)
        {
            setDenotadorTipo((PDenotadorTipo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
