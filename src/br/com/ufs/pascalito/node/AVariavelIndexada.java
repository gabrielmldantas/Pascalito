/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.node;

import java.util.*;
import br.com.ufs.pascalito.analysis.*;

@SuppressWarnings("nls")
public final class AVariavelIndexada extends PVariavelIndexada
{
    private PAcessoVariavel _acessoVariavel_;
    private final LinkedList<PExpressao> _expressao_ = new LinkedList<PExpressao>();

    public AVariavelIndexada()
    {
        // Constructor
    }

    public AVariavelIndexada(
        @SuppressWarnings("hiding") PAcessoVariavel _acessoVariavel_,
        @SuppressWarnings("hiding") List<?> _expressao_)
    {
        // Constructor
        setAcessoVariavel(_acessoVariavel_);

        setExpressao(_expressao_);

    }

    @Override
    public Object clone()
    {
        return new AVariavelIndexada(
            cloneNode(this._acessoVariavel_),
            cloneList(this._expressao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariavelIndexada(this);
    }

    public PAcessoVariavel getAcessoVariavel()
    {
        return this._acessoVariavel_;
    }

    public void setAcessoVariavel(PAcessoVariavel node)
    {
        if(this._acessoVariavel_ != null)
        {
            this._acessoVariavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._acessoVariavel_ = node;
    }

    public LinkedList<PExpressao> getExpressao()
    {
        return this._expressao_;
    }

    public void setExpressao(List<?> list)
    {
        for(PExpressao e : this._expressao_)
        {
            e.parent(null);
        }
        this._expressao_.clear();

        for(Object obj_e : list)
        {
            PExpressao e = (PExpressao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._expressao_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._acessoVariavel_)
            + toString(this._expressao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._acessoVariavel_ == child)
        {
            this._acessoVariavel_ = null;
            return;
        }

        if(this._expressao_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._acessoVariavel_ == oldChild)
        {
            setAcessoVariavel((PAcessoVariavel) newChild);
            return;
        }

        for(ListIterator<PExpressao> i = this._expressao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PExpressao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
