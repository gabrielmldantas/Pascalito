/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.node;

import br.com.ufs.pascalito.analysis.*;

@SuppressWarnings("nls")
public final class AVariavelIndexada extends PVariavelIndexada
{
    private PAcessoVariavel _acessoVariavel_;
    private TAbreColchete _abreColchete_;
    private PExpressoes _expressoes_;
    private TFechaColchete _fechaColchete_;

    public AVariavelIndexada()
    {
        // Constructor
    }

    public AVariavelIndexada(
        @SuppressWarnings("hiding") PAcessoVariavel _acessoVariavel_,
        @SuppressWarnings("hiding") TAbreColchete _abreColchete_,
        @SuppressWarnings("hiding") PExpressoes _expressoes_,
        @SuppressWarnings("hiding") TFechaColchete _fechaColchete_)
    {
        // Constructor
        setAcessoVariavel(_acessoVariavel_);

        setAbreColchete(_abreColchete_);

        setExpressoes(_expressoes_);

        setFechaColchete(_fechaColchete_);

    }

    @Override
    public Object clone()
    {
        return new AVariavelIndexada(
            cloneNode(this._acessoVariavel_),
            cloneNode(this._abreColchete_),
            cloneNode(this._expressoes_),
            cloneNode(this._fechaColchete_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariavelIndexada(this);
    }

    public PAcessoVariavel getAcessoVariavel()
    {
        return this._acessoVariavel_;
    }

    public void setAcessoVariavel(PAcessoVariavel node)
    {
        if(this._acessoVariavel_ != null)
        {
            this._acessoVariavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._acessoVariavel_ = node;
    }

    public TAbreColchete getAbreColchete()
    {
        return this._abreColchete_;
    }

    public void setAbreColchete(TAbreColchete node)
    {
        if(this._abreColchete_ != null)
        {
            this._abreColchete_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreColchete_ = node;
    }

    public PExpressoes getExpressoes()
    {
        return this._expressoes_;
    }

    public void setExpressoes(PExpressoes node)
    {
        if(this._expressoes_ != null)
        {
            this._expressoes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressoes_ = node;
    }

    public TFechaColchete getFechaColchete()
    {
        return this._fechaColchete_;
    }

    public void setFechaColchete(TFechaColchete node)
    {
        if(this._fechaColchete_ != null)
        {
            this._fechaColchete_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaColchete_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._acessoVariavel_)
            + toString(this._abreColchete_)
            + toString(this._expressoes_)
            + toString(this._fechaColchete_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._acessoVariavel_ == child)
        {
            this._acessoVariavel_ = null;
            return;
        }

        if(this._abreColchete_ == child)
        {
            this._abreColchete_ = null;
            return;
        }

        if(this._expressoes_ == child)
        {
            this._expressoes_ = null;
            return;
        }

        if(this._fechaColchete_ == child)
        {
            this._fechaColchete_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._acessoVariavel_ == oldChild)
        {
            setAcessoVariavel((PAcessoVariavel) newChild);
            return;
        }

        if(this._abreColchete_ == oldChild)
        {
            setAbreColchete((TAbreColchete) newChild);
            return;
        }

        if(this._expressoes_ == oldChild)
        {
            setExpressoes((PExpressoes) newChild);
            return;
        }

        if(this._fechaColchete_ == oldChild)
        {
            setFechaColchete((TFechaColchete) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
