/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.node;

import br.com.ufs.pascalito.analysis.*;

@SuppressWarnings("nls")
public final class AMultiploSequenciaSentencas extends PSequenciaSentencas
{
    private PSequenciaSentencas _sequenciaSentencas_;
    private TPontoEVirgula _pontoEVirgula_;
    private PSentenca _sentenca_;

    public AMultiploSequenciaSentencas()
    {
        // Constructor
    }

    public AMultiploSequenciaSentencas(
        @SuppressWarnings("hiding") PSequenciaSentencas _sequenciaSentencas_,
        @SuppressWarnings("hiding") TPontoEVirgula _pontoEVirgula_,
        @SuppressWarnings("hiding") PSentenca _sentenca_)
    {
        // Constructor
        setSequenciaSentencas(_sequenciaSentencas_);

        setPontoEVirgula(_pontoEVirgula_);

        setSentenca(_sentenca_);

    }

    @Override
    public Object clone()
    {
        return new AMultiploSequenciaSentencas(
            cloneNode(this._sequenciaSentencas_),
            cloneNode(this._pontoEVirgula_),
            cloneNode(this._sentenca_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiploSequenciaSentencas(this);
    }

    public PSequenciaSentencas getSequenciaSentencas()
    {
        return this._sequenciaSentencas_;
    }

    public void setSequenciaSentencas(PSequenciaSentencas node)
    {
        if(this._sequenciaSentencas_ != null)
        {
            this._sequenciaSentencas_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sequenciaSentencas_ = node;
    }

    public TPontoEVirgula getPontoEVirgula()
    {
        return this._pontoEVirgula_;
    }

    public void setPontoEVirgula(TPontoEVirgula node)
    {
        if(this._pontoEVirgula_ != null)
        {
            this._pontoEVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoEVirgula_ = node;
    }

    public PSentenca getSentenca()
    {
        return this._sentenca_;
    }

    public void setSentenca(PSentenca node)
    {
        if(this._sentenca_ != null)
        {
            this._sentenca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sentenca_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._sequenciaSentencas_)
            + toString(this._pontoEVirgula_)
            + toString(this._sentenca_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._sequenciaSentencas_ == child)
        {
            this._sequenciaSentencas_ = null;
            return;
        }

        if(this._pontoEVirgula_ == child)
        {
            this._pontoEVirgula_ = null;
            return;
        }

        if(this._sentenca_ == child)
        {
            this._sentenca_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._sequenciaSentencas_ == oldChild)
        {
            setSequenciaSentencas((PSequenciaSentencas) newChild);
            return;
        }

        if(this._pontoEVirgula_ == oldChild)
        {
            setPontoEVirgula((TPontoEVirgula) newChild);
            return;
        }

        if(this._sentenca_ == oldChild)
        {
            setSentenca((PSentenca) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
