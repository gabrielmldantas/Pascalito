/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.parser;

import br.com.ufs.pascalito.lexer.*;
import br.com.ufs.pascalito.node.*;
import br.com.ufs.pascalito.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgram node1 = (PProgram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AProgram */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AUnicoCabecalhoPrograma */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AMultiploCabecalhoPrograma */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce ABloco */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce AUnicoIdentificadores */
            {
                ArrayList<Object> list = new4();
                push(goTo(3), list, false);
            }
            break;
            case 5: /* reduce AMultiploIdentificadores */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce AIntegerIdentificadorTipoOrdinal */
            {
                ArrayList<Object> list = new6();
                push(goTo(4), list, false);
            }
            break;
            case 7: /* reduce AStringIdentificadorTipoOrdinal */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list, false);
            }
            break;
            case 8: /* reduce ARealIdentificadorTipoOrdinal */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list, false);
            }
            break;
            case 9: /* reduce ABooleanIdentificadorTipoOrdinal */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list, false);
            }
            break;
            case 10: /* reduce AIdentificadorIdentificadorTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(5), list, false);
            }
            break;
            case 11: /* reduce AOrdinalIdentificadorTipo */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list, false);
            }
            break;
            case 12: /* reduce ADeclaracaoLabels */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list, false);
            }
            break;
            case 13: /* reduce AEmptyDeclaracaoLabels */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list, false);
            }
            break;
            case 14: /* reduce AUnicoLabels */
            {
                ArrayList<Object> list = new14();
                push(goTo(7), list, false);
            }
            break;
            case 15: /* reduce AMultiploLabels */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list, false);
            }
            break;
            case 16: /* reduce ALabel */
            {
                ArrayList<Object> list = new16();
                push(goTo(8), list, false);
            }
            break;
            case 17: /* reduce ADeclaracaoTipos */
            {
                ArrayList<Object> list = new17();
                push(goTo(9), list, false);
            }
            break;
            case 18: /* reduce AEmptyDeclaracaoTipos */
            {
                ArrayList<Object> list = new18();
                push(goTo(9), list, false);
            }
            break;
            case 19: /* reduce AUnicoDefinicaoTipos */
            {
                ArrayList<Object> list = new19();
                push(goTo(10), list, false);
            }
            break;
            case 20: /* reduce AMultiploDefinicaoTipos */
            {
                ArrayList<Object> list = new20();
                push(goTo(10), list, false);
            }
            break;
            case 21: /* reduce AExistenteDenotadorTipo */
            {
                ArrayList<Object> list = new21();
                push(goTo(11), list, false);
            }
            break;
            case 22: /* reduce ANovoDenotadorTipo */
            {
                ArrayList<Object> list = new22();
                push(goTo(11), list, false);
            }
            break;
            case 23: /* reduce AOrdinalDenotadorTipo */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list, false);
            }
            break;
            case 24: /* reduce AOrdinalNovoTipo */
            {
                ArrayList<Object> list = new24();
                push(goTo(12), list, false);
            }
            break;
            case 25: /* reduce AArrayNovoTipo */
            {
                ArrayList<Object> list = new25();
                push(goTo(12), list, false);
            }
            break;
            case 26: /* reduce ATipoArray */
            {
                ArrayList<Object> list = new26();
                push(goTo(13), list, false);
            }
            break;
            case 27: /* reduce AUnicoTiposOrdinais */
            {
                ArrayList<Object> list = new27();
                push(goTo(14), list, false);
            }
            break;
            case 28: /* reduce AMultiploTiposOrdinais */
            {
                ArrayList<Object> list = new28();
                push(goTo(14), list, false);
            }
            break;
            case 29: /* reduce ANovoTipoOrdinal */
            {
                ArrayList<Object> list = new29();
                push(goTo(15), list, false);
            }
            break;
            case 30: /* reduce AExistenteTipoOrdinal */
            {
                ArrayList<Object> list = new30();
                push(goTo(15), list, false);
            }
            break;
            case 31: /* reduce AEnumeradoNovoTipoOrdinal */
            {
                ArrayList<Object> list = new31();
                push(goTo(16), list, false);
            }
            break;
            case 32: /* reduce ASubrangeNovoTipoOrdinal */
            {
                ArrayList<Object> list = new32();
                push(goTo(16), list, false);
            }
            break;
            case 33: /* reduce ATipoEnumerado */
            {
                ArrayList<Object> list = new33();
                push(goTo(17), list, false);
            }
            break;
            case 34: /* reduce ATipoSubrange */
            {
                ArrayList<Object> list = new34();
                push(goTo(18), list, false);
            }
            break;
            case 35: /* reduce AInteiroConstante */
            {
                ArrayList<Object> list = new35();
                push(goTo(19), list, false);
            }
            break;
            case 36: /* reduce AStringConstante */
            {
                ArrayList<Object> list = new36();
                push(goTo(19), list, false);
            }
            break;
            case 37: /* reduce ADeclaracoesVariaveis */
            {
                ArrayList<Object> list = new37();
                push(goTo(20), list, false);
            }
            break;
            case 38: /* reduce AEmptyDeclaracoesVariaveis */
            {
                ArrayList<Object> list = new38();
                push(goTo(20), list, false);
            }
            break;
            case 39: /* reduce AUnicoDeclaracaoVariaveis */
            {
                ArrayList<Object> list = new39();
                push(goTo(21), list, false);
            }
            break;
            case 40: /* reduce AMultiploDeclaracaoVariaveis */
            {
                ArrayList<Object> list = new40();
                push(goTo(21), list, false);
            }
            break;
            case 41: /* reduce ADeclaracaoVariavel */
            {
                ArrayList<Object> list = new41();
                push(goTo(22), list, false);
            }
            break;
            case 42: /* reduce ADeclaracoesProcFuncoes */
            {
                ArrayList<Object> list = new42();
                push(goTo(23), list, false);
            }
            break;
            case 43: /* reduce AEmptyDeclaracoesProcFuncoes */
            {
                ArrayList<Object> list = new43();
                push(goTo(23), list, false);
            }
            break;
            case 44: /* reduce AUnicoDeclaracaoProcFuncoes */
            {
                ArrayList<Object> list = new44();
                push(goTo(24), list, false);
            }
            break;
            case 45: /* reduce AMultiploDeclaracaoProcFuncoes */
            {
                ArrayList<Object> list = new45();
                push(goTo(24), list, false);
            }
            break;
            case 46: /* reduce AProcedureDeclaracaoProcFuncao */
            {
                ArrayList<Object> list = new46();
                push(goTo(25), list, false);
            }
            break;
            case 47: /* reduce AFuncaoDeclaracaoProcFuncao */
            {
                ArrayList<Object> list = new47();
                push(goTo(25), list, false);
            }
            break;
            case 48: /* reduce ADeclaracaoProcedure */
            {
                ArrayList<Object> list = new48();
                push(goTo(26), list, false);
            }
            break;
            case 49: /* reduce ADeclaracaoFuncao */
            {
                ArrayList<Object> list = new49();
                push(goTo(27), list, false);
            }
            break;
            case 50: /* reduce ACabecalhoProcedure */
            {
                ArrayList<Object> list = new50();
                push(goTo(28), list, false);
            }
            break;
            case 51: /* reduce ACabecalhoFuncao */
            {
                ArrayList<Object> list = new51();
                push(goTo(29), list, false);
            }
            break;
            case 52: /* reduce AParametrosFormais */
            {
                ArrayList<Object> list = new52();
                push(goTo(30), list, false);
            }
            break;
            case 53: /* reduce AEmptyParametrosFormais */
            {
                ArrayList<Object> list = new53();
                push(goTo(30), list, false);
            }
            break;
            case 54: /* reduce AUnicoSecaoParametrosFormais */
            {
                ArrayList<Object> list = new54();
                push(goTo(31), list, false);
            }
            break;
            case 55: /* reduce AMultiploSecaoParametrosFormais */
            {
                ArrayList<Object> list = new55();
                push(goTo(31), list, false);
            }
            break;
            case 56: /* reduce AValorSecaoParametroFormal */
            {
                ArrayList<Object> list = new56();
                push(goTo(32), list, false);
            }
            break;
            case 57: /* reduce AVariavelSecaoParametroFormal */
            {
                ArrayList<Object> list = new57();
                push(goTo(32), list, false);
            }
            break;
            case 58: /* reduce AArraySecaoParametroFormal */
            {
                ArrayList<Object> list = new58();
                push(goTo(32), list, false);
            }
            break;
            case 59: /* reduce ASpecParamValor */
            {
                ArrayList<Object> list = new59();
                push(goTo(33), list, false);
            }
            break;
            case 60: /* reduce ASpecParamVariavel */
            {
                ArrayList<Object> list = new60();
                push(goTo(34), list, false);
            }
            break;
            case 61: /* reduce AValorSpecParamArray */
            {
                ArrayList<Object> list = new61();
                push(goTo(35), list, false);
            }
            break;
            case 62: /* reduce AVariavelSpecParamArray */
            {
                ArrayList<Object> list = new62();
                push(goTo(35), list, false);
            }
            break;
            case 63: /* reduce ASpecParamArrayValor */
            {
                ArrayList<Object> list = new63();
                push(goTo(36), list, false);
            }
            break;
            case 64: /* reduce ASpecParamArrayVariavel */
            {
                ArrayList<Object> list = new64();
                push(goTo(37), list, false);
            }
            break;
            case 65: /* reduce ASchemaArray */
            {
                ArrayList<Object> list = new65();
                push(goTo(38), list, false);
            }
            break;
            case 66: /* reduce AUnicoSpecTiposIndices */
            {
                ArrayList<Object> list = new66();
                push(goTo(39), list, false);
            }
            break;
            case 67: /* reduce AMultiploSpecTiposIndices */
            {
                ArrayList<Object> list = new67();
                push(goTo(39), list, false);
            }
            break;
            case 68: /* reduce ASpecTipoIndice */
            {
                ArrayList<Object> list = new68();
                push(goTo(40), list, false);
            }
            break;
            case 69: /* reduce AIdentificadorIdentificadorSchemaArray */
            {
                ArrayList<Object> list = new69();
                push(goTo(41), list, false);
            }
            break;
            case 70: /* reduce AArrayIdentificadorSchemaArray */
            {
                ArrayList<Object> list = new70();
                push(goTo(41), list, false);
            }
            break;
            case 71: /* reduce AExistenteTipoResultado */
            {
                ArrayList<Object> list = new71();
                push(goTo(42), list, false);
            }
            break;
            case 72: /* reduce AOrdinalTipoResultado */
            {
                ArrayList<Object> list = new72();
                push(goTo(42), list, false);
            }
            break;
            case 73: /* reduce ASentencaComposta */
            {
                ArrayList<Object> list = new73();
                push(goTo(43), list, false);
            }
            break;
            case 74: /* reduce AUnicoSequenciaSentencas */
            {
                ArrayList<Object> list = new74();
                push(goTo(44), list, false);
            }
            break;
            case 75: /* reduce AMultiploSequenciaSentencas */
            {
                ArrayList<Object> list = new75();
                push(goTo(44), list, false);
            }
            break;
            case 76: /* reduce ASentenca */
            {
                ArrayList<Object> list = new76();
                push(goTo(45), list, false);
            }
            break;
            case 77: /* reduce ALabelSentenca */
            {
                ArrayList<Object> list = new77();
                push(goTo(46), list, false);
            }
            break;
            case 78: /* reduce AEmptyLabelSentenca */
            {
                ArrayList<Object> list = new78();
                push(goTo(46), list, false);
            }
            break;
            case 79: /* reduce ASimplesDefinicaoSentenca */
            {
                ArrayList<Object> list = new79();
                push(goTo(47), list, false);
            }
            break;
            case 80: /* reduce AEstruturadaDefinicaoSentenca */
            {
                ArrayList<Object> list = new80();
                push(goTo(47), list, false);
            }
            break;
            case 81: /* reduce AAtribuicaoSentencaSimples */
            {
                ArrayList<Object> list = new81();
                push(goTo(48), list, false);
            }
            break;
            case 82: /* reduce AProcedureSentencaSimples */
            {
                ArrayList<Object> list = new82();
                push(goTo(48), list, false);
            }
            break;
            case 83: /* reduce AGotoSentencaSimples */
            {
                ArrayList<Object> list = new83();
                push(goTo(48), list, false);
            }
            break;
            case 84: /* reduce AEmptySentencaSimples */
            {
                ArrayList<Object> list = new84();
                push(goTo(48), list, false);
            }
            break;
            case 85: /* reduce ASentencaAtribuicao */
            {
                ArrayList<Object> list = new85();
                push(goTo(49), list, false);
            }
            break;
            case 86: /* reduce ASentencaProcedure */
            {
                ArrayList<Object> list = new86();
                push(goTo(50), list, false);
            }
            break;
            case 87: /* reduce AParametrosReais */
            {
                ArrayList<Object> list = new87();
                push(goTo(51), list, false);
            }
            break;
            case 88: /* reduce AEmptyParametrosReais */
            {
                ArrayList<Object> list = new88();
                push(goTo(51), list, false);
            }
            break;
            case 89: /* reduce AUnicoDefinicaoParametrosReais */
            {
                ArrayList<Object> list = new89();
                push(goTo(52), list, false);
            }
            break;
            case 90: /* reduce AMultiploDefinicaoParametrosReais */
            {
                ArrayList<Object> list = new90();
                push(goTo(52), list, false);
            }
            break;
            case 91: /* reduce ACompostaSentencaEstruturada */
            {
                ArrayList<Object> list = new91();
                push(goTo(53), list, false);
            }
            break;
            case 92: /* reduce AWhileSentencaEstruturada */
            {
                ArrayList<Object> list = new92();
                push(goTo(53), list, false);
            }
            break;
            case 93: /* reduce ASentencaWhile */
            {
                ArrayList<Object> list = new93();
                push(goTo(54), list, false);
            }
            break;
            case 94: /* reduce ASentencaGoto */
            {
                ArrayList<Object> list = new94();
                push(goTo(55), list, false);
            }
            break;
            case 95: /* reduce AAcessoVariavel */
            {
                ArrayList<Object> list = new95();
                push(goTo(56), list, false);
            }
            break;
            case 96: /* reduce AIndexadaAcessoVariavel */
            {
                ArrayList<Object> list = new96();
                push(goTo(56), list, false);
            }
            break;
            case 97: /* reduce AVariavelIndexada */
            {
                ArrayList<Object> list = new97();
                push(goTo(57), list, false);
            }
            break;
            case 98: /* reduce AUnicoExpressoes */
            {
                ArrayList<Object> list = new98();
                push(goTo(58), list, false);
            }
            break;
            case 99: /* reduce AMultiploExpressoes */
            {
                ArrayList<Object> list = new99();
                push(goTo(58), list, false);
            }
            break;
            case 100: /* reduce AExpressao */
            {
                ArrayList<Object> list = new100();
                push(goTo(59), list, false);
            }
            break;
            case 101: /* reduce AExpressaoRelacional */
            {
                ArrayList<Object> list = new101();
                push(goTo(60), list, false);
            }
            break;
            case 102: /* reduce AEmptyExpressaoRelacional */
            {
                ArrayList<Object> list = new102();
                push(goTo(60), list, false);
            }
            break;
            case 103: /* reduce AUnicoExpressaoSimples */
            {
                ArrayList<Object> list = new103();
                push(goTo(61), list, false);
            }
            break;
            case 104: /* reduce AMultiploExpressaoSimples */
            {
                ArrayList<Object> list = new104();
                push(goTo(61), list, false);
            }
            break;
            case 105: /* reduce AUnicoTermo */
            {
                ArrayList<Object> list = new105();
                push(goTo(62), list, false);
            }
            break;
            case 106: /* reduce AMultiploTermo */
            {
                ArrayList<Object> list = new106();
                push(goTo(62), list, false);
            }
            break;
            case 107: /* reduce AVariavelFator */
            {
                ArrayList<Object> list = new107();
                push(goTo(63), list, false);
            }
            break;
            case 108: /* reduce AInteiroFator */
            {
                ArrayList<Object> list = new108();
                push(goTo(63), list, false);
            }
            break;
            case 109: /* reduce ARealFator */
            {
                ArrayList<Object> list = new109();
                push(goTo(63), list, false);
            }
            break;
            case 110: /* reduce AStringFator */
            {
                ArrayList<Object> list = new110();
                push(goTo(63), list, false);
            }
            break;
            case 111: /* reduce AExpressaoFator */
            {
                ArrayList<Object> list = new111();
                push(goTo(63), list, false);
            }
            break;
            case 112: /* reduce AFator */
            {
                ArrayList<Object> list = new112();
                push(goTo(63), list, false);
            }
            break;
            case 113: /* reduce AMenorOperadorRelacional */
            {
                ArrayList<Object> list = new113();
                push(goTo(64), list, false);
            }
            break;
            case 114: /* reduce AMenorIgualOperadorRelacional */
            {
                ArrayList<Object> list = new114();
                push(goTo(64), list, false);
            }
            break;
            case 115: /* reduce AMaiorOperadorRelacional */
            {
                ArrayList<Object> list = new115();
                push(goTo(64), list, false);
            }
            break;
            case 116: /* reduce AMaiorIgualOperadorRelacional */
            {
                ArrayList<Object> list = new116();
                push(goTo(64), list, false);
            }
            break;
            case 117: /* reduce AIgualOperadorRelacional */
            {
                ArrayList<Object> list = new117();
                push(goTo(64), list, false);
            }
            break;
            case 118: /* reduce ADiferenteOperadorRelacional */
            {
                ArrayList<Object> list = new118();
                push(goTo(64), list, false);
            }
            break;
            case 119: /* reduce ASomaOperadorAditivo */
            {
                ArrayList<Object> list = new119();
                push(goTo(65), list, false);
            }
            break;
            case 120: /* reduce ASubtracaoOperadorAditivo */
            {
                ArrayList<Object> list = new120();
                push(goTo(65), list, false);
            }
            break;
            case 121: /* reduce AOrOperadorAditivo */
            {
                ArrayList<Object> list = new121();
                push(goTo(65), list, false);
            }
            break;
            case 122: /* reduce AMultiplicacaoOperadorMultiplicativo */
            {
                ArrayList<Object> list = new122();
                push(goTo(66), list, false);
            }
            break;
            case 123: /* reduce ADivisaoOperadorMultiplicativo */
            {
                ArrayList<Object> list = new123();
                push(goTo(66), list, false);
            }
            break;
            case 124: /* reduce AAndOperadorMultiplicativo */
            {
                ArrayList<Object> list = new124();
                push(goTo(66), list, false);
            }
            break;
            case 125: /* reduce ADivOperadorMultiplicativo */
            {
                ArrayList<Object> list = new125();
                push(goTo(66), list, false);
            }
            break;
            case 126: /* reduce AModOperadorMultiplicativo */
            {
                ArrayList<Object> list = new126();
                push(goTo(66), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AProgram */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PCabecalhoPrograma pcabecalhoprogramaNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        PBloco pblocoNode4;
        TPonto tpontoNode5;
        pcabecalhoprogramaNode2 = (PCabecalhoPrograma)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);
        pblocoNode4 = (PBloco)nodeArrayList3.get(0);
        tpontoNode5 = (TPonto)nodeArrayList4.get(0);

        pprogramNode1 = new AProgram(pcabecalhoprogramaNode2, tpontoevirgulaNode3, pblocoNode4, tpontoNode5);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AUnicoCabecalhoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCabecalhoPrograma pcabecalhoprogramaNode1;
        {
            // Block
        TProgram tprogramNode2;
        TIdentificador tidentificadorNode3;
        tprogramNode2 = (TProgram)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);

        pcabecalhoprogramaNode1 = new AUnicoCabecalhoPrograma(tprogramNode2, tidentificadorNode3);
        }
	nodeList.add(pcabecalhoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AMultiploCabecalhoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCabecalhoPrograma pcabecalhoprogramaNode1;
        {
            // Block
        TProgram tprogramNode2;
        TIdentificador tidentificadorNode3;
        TAbreParenteses tabreparentesesNode4;
        PIdentificadores pidentificadoresNode5;
        TFechaParenteses tfechaparentesesNode6;
        tprogramNode2 = (TProgram)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tabreparentesesNode4 = (TAbreParenteses)nodeArrayList3.get(0);
        pidentificadoresNode5 = (PIdentificadores)nodeArrayList4.get(0);
        tfechaparentesesNode6 = (TFechaParenteses)nodeArrayList5.get(0);

        pcabecalhoprogramaNode1 = new AMultiploCabecalhoPrograma(tprogramNode2, tidentificadorNode3, tabreparentesesNode4, pidentificadoresNode5, tfechaparentesesNode6);
        }
	nodeList.add(pcabecalhoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ABloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        PDeclaracaoLabels pdeclaracaolabelsNode2;
        PDeclaracaoTipos pdeclaracaotiposNode3;
        PDeclaracoesVariaveis pdeclaracoesvariaveisNode4;
        PDeclaracoesProcFuncoes pdeclaracoesprocfuncoesNode5;
        PSentencaComposta psentencacompostaNode6;
        pdeclaracaolabelsNode2 = (PDeclaracaoLabels)nodeArrayList1.get(0);
        pdeclaracaotiposNode3 = (PDeclaracaoTipos)nodeArrayList2.get(0);
        pdeclaracoesvariaveisNode4 = (PDeclaracoesVariaveis)nodeArrayList3.get(0);
        pdeclaracoesprocfuncoesNode5 = (PDeclaracoesProcFuncoes)nodeArrayList4.get(0);
        psentencacompostaNode6 = (PSentencaComposta)nodeArrayList5.get(0);

        pblocoNode1 = new ABloco(pdeclaracaolabelsNode2, pdeclaracaotiposNode3, pdeclaracoesvariaveisNode4, pdeclaracoesprocfuncoesNode5, psentencacompostaNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AUnicoIdentificadores */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadores pidentificadoresNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pidentificadoresNode1 = new AUnicoIdentificadores(tidentificadorNode2);
        }
	nodeList.add(pidentificadoresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AMultiploIdentificadores */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadores pidentificadoresNode1;
        {
            // Block
        PIdentificadores pidentificadoresNode2;
        TVirgula tvirgulaNode3;
        TIdentificador tidentificadorNode4;
        pidentificadoresNode2 = (PIdentificadores)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        tidentificadorNode4 = (TIdentificador)nodeArrayList3.get(0);

        pidentificadoresNode1 = new AMultiploIdentificadores(pidentificadoresNode2, tvirgulaNode3, tidentificadorNode4);
        }
	nodeList.add(pidentificadoresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AIntegerIdentificadorTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode1;
        {
            // Block
        TInteger tintegerNode2;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pidentificadortipoordinalNode1 = new AIntegerIdentificadorTipoOrdinal(tintegerNode2);
        }
	nodeList.add(pidentificadortipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AStringIdentificadorTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pidentificadortipoordinalNode1 = new AStringIdentificadorTipoOrdinal(tstringNode2);
        }
	nodeList.add(pidentificadortipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ARealIdentificadorTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        pidentificadortipoordinalNode1 = new ARealIdentificadorTipoOrdinal(trealNode2);
        }
	nodeList.add(pidentificadortipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ABooleanIdentificadorTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode1;
        {
            // Block
        TBoolean tbooleanNode2;
        tbooleanNode2 = (TBoolean)nodeArrayList1.get(0);

        pidentificadortipoordinalNode1 = new ABooleanIdentificadorTipoOrdinal(tbooleanNode2);
        }
	nodeList.add(pidentificadortipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AIdentificadorIdentificadorTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorTipo pidentificadortipoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pidentificadortipoNode1 = new AIdentificadorIdentificadorTipo(tidentificadorNode2);
        }
	nodeList.add(pidentificadortipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AOrdinalIdentificadorTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorTipo pidentificadortipoNode1;
        {
            // Block
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode2;
        pidentificadortipoordinalNode2 = (PIdentificadorTipoOrdinal)nodeArrayList1.get(0);

        pidentificadortipoNode1 = new AOrdinalIdentificadorTipo(pidentificadortipoordinalNode2);
        }
	nodeList.add(pidentificadortipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ADeclaracaoLabels */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoLabels pdeclaracaolabelsNode1;
        {
            // Block
        TLabel tlabelNode2;
        PLabels plabelsNode3;
        TPontoEVirgula tpontoevirgulaNode4;
        tlabelNode2 = (TLabel)nodeArrayList1.get(0);
        plabelsNode3 = (PLabels)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoEVirgula)nodeArrayList3.get(0);

        pdeclaracaolabelsNode1 = new ADeclaracaoLabels(tlabelNode2, plabelsNode3, tpontoevirgulaNode4);
        }
	nodeList.add(pdeclaracaolabelsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AEmptyDeclaracaoLabels */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracaoLabels pdeclaracaolabelsNode1;
        {
            // Block

        pdeclaracaolabelsNode1 = new AEmptyDeclaracaoLabels();
        }
	nodeList.add(pdeclaracaolabelsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AUnicoLabels */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLabels plabelsNode1;
        {
            // Block
        PLabel plabelNode2;
        plabelNode2 = (PLabel)nodeArrayList1.get(0);

        plabelsNode1 = new AUnicoLabels(plabelNode2);
        }
	nodeList.add(plabelsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AMultiploLabels */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLabels plabelsNode1;
        {
            // Block
        PLabels plabelsNode2;
        TVirgula tvirgulaNode3;
        PLabel plabelNode4;
        plabelsNode2 = (PLabels)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        plabelNode4 = (PLabel)nodeArrayList3.get(0);

        plabelsNode1 = new AMultiploLabels(plabelsNode2, tvirgulaNode3, plabelNode4);
        }
	nodeList.add(plabelsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ALabel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLabel plabelNode1;
        {
            // Block
        TConstInteiro tconstinteiroNode2;
        tconstinteiroNode2 = (TConstInteiro)nodeArrayList1.get(0);

        plabelNode1 = new ALabel(tconstinteiroNode2);
        }
	nodeList.add(plabelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ADeclaracaoTipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoTipos pdeclaracaotiposNode1;
        {
            // Block
        TType ttypeNode2;
        PDefinicaoTipos pdefinicaotiposNode3;
        TPontoEVirgula tpontoevirgulaNode4;
        ttypeNode2 = (TType)nodeArrayList1.get(0);
        pdefinicaotiposNode3 = (PDefinicaoTipos)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoEVirgula)nodeArrayList3.get(0);

        pdeclaracaotiposNode1 = new ADeclaracaoTipos(ttypeNode2, pdefinicaotiposNode3, tpontoevirgulaNode4);
        }
	nodeList.add(pdeclaracaotiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AEmptyDeclaracaoTipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracaoTipos pdeclaracaotiposNode1;
        {
            // Block

        pdeclaracaotiposNode1 = new AEmptyDeclaracaoTipos();
        }
	nodeList.add(pdeclaracaotiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AUnicoDefinicaoTipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefinicaoTipos pdefinicaotiposNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TIgual tigualNode3;
        PDenotadorTipo pdenotadortipoNode4;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        pdenotadortipoNode4 = (PDenotadorTipo)nodeArrayList3.get(0);

        pdefinicaotiposNode1 = new AUnicoDefinicaoTipos(tidentificadorNode2, tigualNode3, pdenotadortipoNode4);
        }
	nodeList.add(pdefinicaotiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AMultiploDefinicaoTipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefinicaoTipos pdefinicaotiposNode1;
        {
            // Block
        PDefinicaoTipos pdefinicaotiposNode2;
        TVirgula tvirgulaNode3;
        PDenotadorTipo pdenotadortipoNode4;
        pdefinicaotiposNode2 = (PDefinicaoTipos)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pdenotadortipoNode4 = (PDenotadorTipo)nodeArrayList3.get(0);

        pdefinicaotiposNode1 = new AMultiploDefinicaoTipos(pdefinicaotiposNode2, tvirgulaNode3, pdenotadortipoNode4);
        }
	nodeList.add(pdefinicaotiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AExistenteDenotadorTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDenotadorTipo pdenotadortipoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pdenotadortipoNode1 = new AExistenteDenotadorTipo(tidentificadorNode2);
        }
	nodeList.add(pdenotadortipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ANovoDenotadorTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDenotadorTipo pdenotadortipoNode1;
        {
            // Block
        PNovoTipo pnovotipoNode2;
        pnovotipoNode2 = (PNovoTipo)nodeArrayList1.get(0);

        pdenotadortipoNode1 = new ANovoDenotadorTipo(pnovotipoNode2);
        }
	nodeList.add(pdenotadortipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AOrdinalDenotadorTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDenotadorTipo pdenotadortipoNode1;
        {
            // Block
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode2;
        pidentificadortipoordinalNode2 = (PIdentificadorTipoOrdinal)nodeArrayList1.get(0);

        pdenotadortipoNode1 = new AOrdinalDenotadorTipo(pidentificadortipoordinalNode2);
        }
	nodeList.add(pdenotadortipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AOrdinalNovoTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNovoTipo pnovotipoNode1;
        {
            // Block
        PNovoTipoOrdinal pnovotipoordinalNode2;
        pnovotipoordinalNode2 = (PNovoTipoOrdinal)nodeArrayList1.get(0);

        pnovotipoNode1 = new AOrdinalNovoTipo(pnovotipoordinalNode2);
        }
	nodeList.add(pnovotipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AArrayNovoTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNovoTipo pnovotipoNode1;
        {
            // Block
        PTipoArray ptipoarrayNode2;
        ptipoarrayNode2 = (PTipoArray)nodeArrayList1.get(0);

        pnovotipoNode1 = new AArrayNovoTipo(ptipoarrayNode2);
        }
	nodeList.add(pnovotipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ATipoArray */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoArray ptipoarrayNode1;
        {
            // Block
        TArray tarrayNode2;
        TAbreColchete tabrecolcheteNode3;
        PTiposOrdinais ptiposordinaisNode4;
        TFechaColchete tfechacolcheteNode5;
        TOf tofNode6;
        PDenotadorTipo pdenotadortipoNode7;
        tarrayNode2 = (TArray)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbreColchete)nodeArrayList2.get(0);
        ptiposordinaisNode4 = (PTiposOrdinais)nodeArrayList3.get(0);
        tfechacolcheteNode5 = (TFechaColchete)nodeArrayList4.get(0);
        tofNode6 = (TOf)nodeArrayList5.get(0);
        pdenotadortipoNode7 = (PDenotadorTipo)nodeArrayList6.get(0);

        ptipoarrayNode1 = new ATipoArray(tarrayNode2, tabrecolcheteNode3, ptiposordinaisNode4, tfechacolcheteNode5, tofNode6, pdenotadortipoNode7);
        }
	nodeList.add(ptipoarrayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AUnicoTiposOrdinais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTiposOrdinais ptiposordinaisNode1;
        {
            // Block
        PTipoOrdinal ptipoordinalNode2;
        ptipoordinalNode2 = (PTipoOrdinal)nodeArrayList1.get(0);

        ptiposordinaisNode1 = new AUnicoTiposOrdinais(ptipoordinalNode2);
        }
	nodeList.add(ptiposordinaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AMultiploTiposOrdinais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTiposOrdinais ptiposordinaisNode1;
        {
            // Block
        PTiposOrdinais ptiposordinaisNode2;
        TVirgula tvirgulaNode3;
        PTipoOrdinal ptipoordinalNode4;
        ptiposordinaisNode2 = (PTiposOrdinais)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        ptipoordinalNode4 = (PTipoOrdinal)nodeArrayList3.get(0);

        ptiposordinaisNode1 = new AMultiploTiposOrdinais(ptiposordinaisNode2, tvirgulaNode3, ptipoordinalNode4);
        }
	nodeList.add(ptiposordinaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ANovoTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoOrdinal ptipoordinalNode1;
        {
            // Block
        PNovoTipoOrdinal pnovotipoordinalNode2;
        pnovotipoordinalNode2 = (PNovoTipoOrdinal)nodeArrayList1.get(0);

        ptipoordinalNode1 = new ANovoTipoOrdinal(pnovotipoordinalNode2);
        }
	nodeList.add(ptipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AExistenteTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoOrdinal ptipoordinalNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        ptipoordinalNode1 = new AExistenteTipoOrdinal(tidentificadorNode2);
        }
	nodeList.add(ptipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AEnumeradoNovoTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNovoTipoOrdinal pnovotipoordinalNode1;
        {
            // Block
        PTipoEnumerado ptipoenumeradoNode2;
        ptipoenumeradoNode2 = (PTipoEnumerado)nodeArrayList1.get(0);

        pnovotipoordinalNode1 = new AEnumeradoNovoTipoOrdinal(ptipoenumeradoNode2);
        }
	nodeList.add(pnovotipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ASubrangeNovoTipoOrdinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNovoTipoOrdinal pnovotipoordinalNode1;
        {
            // Block
        PTipoSubrange ptiposubrangeNode2;
        ptiposubrangeNode2 = (PTipoSubrange)nodeArrayList1.get(0);

        pnovotipoordinalNode1 = new ASubrangeNovoTipoOrdinal(ptiposubrangeNode2);
        }
	nodeList.add(pnovotipoordinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ATipoEnumerado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoEnumerado ptipoenumeradoNode1;
        {
            // Block
        TAbreParenteses tabreparentesesNode2;
        PIdentificadores pidentificadoresNode3;
        TFechaParenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreParenteses)nodeArrayList1.get(0);
        pidentificadoresNode3 = (PIdentificadores)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaParenteses)nodeArrayList3.get(0);

        ptipoenumeradoNode1 = new ATipoEnumerado(tabreparentesesNode2, pidentificadoresNode3, tfechaparentesesNode4);
        }
	nodeList.add(ptipoenumeradoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ATipoSubrange */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoSubrange ptiposubrangeNode1;
        {
            // Block
        PConstante pconstanteNode2;
        TPontoPonto tpontopontoNode3;
        PConstante pconstanteNode4;
        pconstanteNode2 = (PConstante)nodeArrayList1.get(0);
        tpontopontoNode3 = (TPontoPonto)nodeArrayList2.get(0);
        pconstanteNode4 = (PConstante)nodeArrayList3.get(0);

        ptiposubrangeNode1 = new ATipoSubrange(pconstanteNode2, tpontopontoNode3, pconstanteNode4);
        }
	nodeList.add(ptiposubrangeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AInteiroConstante */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstante pconstanteNode1;
        {
            // Block
        TConstInteiro tconstinteiroNode2;
        tconstinteiroNode2 = (TConstInteiro)nodeArrayList1.get(0);

        pconstanteNode1 = new AInteiroConstante(tconstinteiroNode2);
        }
	nodeList.add(pconstanteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AStringConstante */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstante pconstanteNode1;
        {
            // Block
        TConstString tconststringNode2;
        tconststringNode2 = (TConstString)nodeArrayList1.get(0);

        pconstanteNode1 = new AStringConstante(tconststringNode2);
        }
	nodeList.add(pconstanteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ADeclaracoesVariaveis */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoesVariaveis pdeclaracoesvariaveisNode1;
        {
            // Block
        TVar tvarNode2;
        PDeclaracaoVariaveis pdeclaracaovariaveisNode3;
        TPontoEVirgula tpontoevirgulaNode4;
        tvarNode2 = (TVar)nodeArrayList1.get(0);
        pdeclaracaovariaveisNode3 = (PDeclaracaoVariaveis)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoEVirgula)nodeArrayList3.get(0);

        pdeclaracoesvariaveisNode1 = new ADeclaracoesVariaveis(tvarNode2, pdeclaracaovariaveisNode3, tpontoevirgulaNode4);
        }
	nodeList.add(pdeclaracoesvariaveisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AEmptyDeclaracoesVariaveis */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracoesVariaveis pdeclaracoesvariaveisNode1;
        {
            // Block

        pdeclaracoesvariaveisNode1 = new AEmptyDeclaracoesVariaveis();
        }
	nodeList.add(pdeclaracoesvariaveisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AUnicoDeclaracaoVariaveis */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariaveis pdeclaracaovariaveisNode1;
        {
            // Block
        PDeclaracaoVariavel pdeclaracaovariavelNode2;
        pdeclaracaovariavelNode2 = (PDeclaracaoVariavel)nodeArrayList1.get(0);

        pdeclaracaovariaveisNode1 = new AUnicoDeclaracaoVariaveis(pdeclaracaovariavelNode2);
        }
	nodeList.add(pdeclaracaovariaveisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AMultiploDeclaracaoVariaveis */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariaveis pdeclaracaovariaveisNode1;
        {
            // Block
        PDeclaracaoVariaveis pdeclaracaovariaveisNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        PDeclaracaoVariavel pdeclaracaovariavelNode4;
        pdeclaracaovariaveisNode2 = (PDeclaracaoVariaveis)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);
        pdeclaracaovariavelNode4 = (PDeclaracaoVariavel)nodeArrayList3.get(0);

        pdeclaracaovariaveisNode1 = new AMultiploDeclaracaoVariaveis(pdeclaracaovariaveisNode2, tpontoevirgulaNode3, pdeclaracaovariavelNode4);
        }
	nodeList.add(pdeclaracaovariaveisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ADeclaracaoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariavel pdeclaracaovariavelNode1;
        {
            // Block
        PIdentificadores pidentificadoresNode2;
        TDoisPontos tdoispontosNode3;
        PDenotadorTipo pdenotadortipoNode4;
        pidentificadoresNode2 = (PIdentificadores)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pdenotadortipoNode4 = (PDenotadorTipo)nodeArrayList3.get(0);

        pdeclaracaovariavelNode1 = new ADeclaracaoVariavel(pidentificadoresNode2, tdoispontosNode3, pdenotadortipoNode4);
        }
	nodeList.add(pdeclaracaovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ADeclaracoesProcFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoesProcFuncoes pdeclaracoesprocfuncoesNode1;
        {
            // Block
        PDeclaracaoProcFuncoes pdeclaracaoprocfuncoesNode2;
        pdeclaracaoprocfuncoesNode2 = (PDeclaracaoProcFuncoes)nodeArrayList1.get(0);

        pdeclaracoesprocfuncoesNode1 = new ADeclaracoesProcFuncoes(pdeclaracaoprocfuncoesNode2);
        }
	nodeList.add(pdeclaracoesprocfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AEmptyDeclaracoesProcFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracoesProcFuncoes pdeclaracoesprocfuncoesNode1;
        {
            // Block

        pdeclaracoesprocfuncoesNode1 = new AEmptyDeclaracoesProcFuncoes();
        }
	nodeList.add(pdeclaracoesprocfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AUnicoDeclaracaoProcFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoProcFuncoes pdeclaracaoprocfuncoesNode1;
        {
            // Block
        PDeclaracaoProcFuncao pdeclaracaoprocfuncaoNode2;
        pdeclaracaoprocfuncaoNode2 = (PDeclaracaoProcFuncao)nodeArrayList1.get(0);

        pdeclaracaoprocfuncoesNode1 = new AUnicoDeclaracaoProcFuncoes(pdeclaracaoprocfuncaoNode2);
        }
	nodeList.add(pdeclaracaoprocfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AMultiploDeclaracaoProcFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoProcFuncoes pdeclaracaoprocfuncoesNode1;
        {
            // Block
        PDeclaracaoProcFuncoes pdeclaracaoprocfuncoesNode2;
        PDeclaracaoProcFuncao pdeclaracaoprocfuncaoNode3;
        pdeclaracaoprocfuncoesNode2 = (PDeclaracaoProcFuncoes)nodeArrayList1.get(0);
        pdeclaracaoprocfuncaoNode3 = (PDeclaracaoProcFuncao)nodeArrayList2.get(0);

        pdeclaracaoprocfuncoesNode1 = new AMultiploDeclaracaoProcFuncoes(pdeclaracaoprocfuncoesNode2, pdeclaracaoprocfuncaoNode3);
        }
	nodeList.add(pdeclaracaoprocfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AProcedureDeclaracaoProcFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoProcFuncao pdeclaracaoprocfuncaoNode1;
        {
            // Block
        PDeclaracaoProcedure pdeclaracaoprocedureNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        pdeclaracaoprocedureNode2 = (PDeclaracaoProcedure)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);

        pdeclaracaoprocfuncaoNode1 = new AProcedureDeclaracaoProcFuncao(pdeclaracaoprocedureNode2, tpontoevirgulaNode3);
        }
	nodeList.add(pdeclaracaoprocfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AFuncaoDeclaracaoProcFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoProcFuncao pdeclaracaoprocfuncaoNode1;
        {
            // Block
        PDeclaracaoFuncao pdeclaracaofuncaoNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        pdeclaracaofuncaoNode2 = (PDeclaracaoFuncao)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);

        pdeclaracaoprocfuncaoNode1 = new AFuncaoDeclaracaoProcFuncao(pdeclaracaofuncaoNode2, tpontoevirgulaNode3);
        }
	nodeList.add(pdeclaracaoprocfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ADeclaracaoProcedure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoProcedure pdeclaracaoprocedureNode1;
        {
            // Block
        PCabecalhoProcedure pcabecalhoprocedureNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        PBloco pblocoNode4;
        pcabecalhoprocedureNode2 = (PCabecalhoProcedure)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);
        pblocoNode4 = (PBloco)nodeArrayList3.get(0);

        pdeclaracaoprocedureNode1 = new ADeclaracaoProcedure(pcabecalhoprocedureNode2, tpontoevirgulaNode3, pblocoNode4);
        }
	nodeList.add(pdeclaracaoprocedureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ADeclaracaoFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoFuncao pdeclaracaofuncaoNode1;
        {
            // Block
        PCabecalhoFuncao pcabecalhofuncaoNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        PBloco pblocoNode4;
        pcabecalhofuncaoNode2 = (PCabecalhoFuncao)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);
        pblocoNode4 = (PBloco)nodeArrayList3.get(0);

        pdeclaracaofuncaoNode1 = new ADeclaracaoFuncao(pcabecalhofuncaoNode2, tpontoevirgulaNode3, pblocoNode4);
        }
	nodeList.add(pdeclaracaofuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ACabecalhoProcedure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCabecalhoProcedure pcabecalhoprocedureNode1;
        {
            // Block
        TProcedure tprocedureNode2;
        TIdentificador tidentificadorNode3;
        PParametrosFormais pparametrosformaisNode4;
        tprocedureNode2 = (TProcedure)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pparametrosformaisNode4 = (PParametrosFormais)nodeArrayList3.get(0);

        pcabecalhoprocedureNode1 = new ACabecalhoProcedure(tprocedureNode2, tidentificadorNode3, pparametrosformaisNode4);
        }
	nodeList.add(pcabecalhoprocedureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ACabecalhoFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCabecalhoFuncao pcabecalhofuncaoNode1;
        {
            // Block
        TFunction tfunctionNode2;
        TIdentificador tidentificadorNode3;
        PParametrosFormais pparametrosformaisNode4;
        TDoisPontos tdoispontosNode5;
        PTipoResultado ptiporesultadoNode6;
        tfunctionNode2 = (TFunction)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pparametrosformaisNode4 = (PParametrosFormais)nodeArrayList3.get(0);
        tdoispontosNode5 = (TDoisPontos)nodeArrayList4.get(0);
        ptiporesultadoNode6 = (PTipoResultado)nodeArrayList5.get(0);

        pcabecalhofuncaoNode1 = new ACabecalhoFuncao(tfunctionNode2, tidentificadorNode3, pparametrosformaisNode4, tdoispontosNode5, ptiporesultadoNode6);
        }
	nodeList.add(pcabecalhofuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AParametrosFormais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametrosFormais pparametrosformaisNode1;
        {
            // Block
        TAbreParenteses tabreparentesesNode2;
        PSecaoParametrosFormais psecaoparametrosformaisNode3;
        TFechaParenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreParenteses)nodeArrayList1.get(0);
        psecaoparametrosformaisNode3 = (PSecaoParametrosFormais)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaParenteses)nodeArrayList3.get(0);

        pparametrosformaisNode1 = new AParametrosFormais(tabreparentesesNode2, psecaoparametrosformaisNode3, tfechaparentesesNode4);
        }
	nodeList.add(pparametrosformaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AEmptyParametrosFormais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametrosFormais pparametrosformaisNode1;
        {
            // Block

        pparametrosformaisNode1 = new AEmptyParametrosFormais();
        }
	nodeList.add(pparametrosformaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AUnicoSecaoParametrosFormais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSecaoParametrosFormais psecaoparametrosformaisNode1;
        {
            // Block
        PSecaoParametroFormal psecaoparametroformalNode2;
        psecaoparametroformalNode2 = (PSecaoParametroFormal)nodeArrayList1.get(0);

        psecaoparametrosformaisNode1 = new AUnicoSecaoParametrosFormais(psecaoparametroformalNode2);
        }
	nodeList.add(psecaoparametrosformaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AMultiploSecaoParametrosFormais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSecaoParametrosFormais psecaoparametrosformaisNode1;
        {
            // Block
        PSecaoParametrosFormais psecaoparametrosformaisNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        PSecaoParametroFormal psecaoparametroformalNode4;
        psecaoparametrosformaisNode2 = (PSecaoParametrosFormais)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);
        psecaoparametroformalNode4 = (PSecaoParametroFormal)nodeArrayList3.get(0);

        psecaoparametrosformaisNode1 = new AMultiploSecaoParametrosFormais(psecaoparametrosformaisNode2, tpontoevirgulaNode3, psecaoparametroformalNode4);
        }
	nodeList.add(psecaoparametrosformaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AValorSecaoParametroFormal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSecaoParametroFormal psecaoparametroformalNode1;
        {
            // Block
        PSpecParamValor pspecparamvalorNode2;
        pspecparamvalorNode2 = (PSpecParamValor)nodeArrayList1.get(0);

        psecaoparametroformalNode1 = new AValorSecaoParametroFormal(pspecparamvalorNode2);
        }
	nodeList.add(psecaoparametroformalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AVariavelSecaoParametroFormal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSecaoParametroFormal psecaoparametroformalNode1;
        {
            // Block
        PSpecParamVariavel pspecparamvariavelNode2;
        pspecparamvariavelNode2 = (PSpecParamVariavel)nodeArrayList1.get(0);

        psecaoparametroformalNode1 = new AVariavelSecaoParametroFormal(pspecparamvariavelNode2);
        }
	nodeList.add(psecaoparametroformalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AArraySecaoParametroFormal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSecaoParametroFormal psecaoparametroformalNode1;
        {
            // Block
        PSpecParamArray pspecparamarrayNode2;
        pspecparamarrayNode2 = (PSpecParamArray)nodeArrayList1.get(0);

        psecaoparametroformalNode1 = new AArraySecaoParametroFormal(pspecparamarrayNode2);
        }
	nodeList.add(psecaoparametroformalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ASpecParamValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecParamValor pspecparamvalorNode1;
        {
            // Block
        PIdentificadores pidentificadoresNode2;
        TDoisPontos tdoispontosNode3;
        PIdentificadorTipo pidentificadortipoNode4;
        pidentificadoresNode2 = (PIdentificadores)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pidentificadortipoNode4 = (PIdentificadorTipo)nodeArrayList3.get(0);

        pspecparamvalorNode1 = new ASpecParamValor(pidentificadoresNode2, tdoispontosNode3, pidentificadortipoNode4);
        }
	nodeList.add(pspecparamvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ASpecParamVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecParamVariavel pspecparamvariavelNode1;
        {
            // Block
        TVar tvarNode2;
        PIdentificadores pidentificadoresNode3;
        TDoisPontos tdoispontosNode4;
        PIdentificadorTipo pidentificadortipoNode5;
        tvarNode2 = (TVar)nodeArrayList1.get(0);
        pidentificadoresNode3 = (PIdentificadores)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pidentificadortipoNode5 = (PIdentificadorTipo)nodeArrayList4.get(0);

        pspecparamvariavelNode1 = new ASpecParamVariavel(tvarNode2, pidentificadoresNode3, tdoispontosNode4, pidentificadortipoNode5);
        }
	nodeList.add(pspecparamvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AValorSpecParamArray */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecParamArray pspecparamarrayNode1;
        {
            // Block
        PSpecParamArrayValor pspecparamarrayvalorNode2;
        pspecparamarrayvalorNode2 = (PSpecParamArrayValor)nodeArrayList1.get(0);

        pspecparamarrayNode1 = new AValorSpecParamArray(pspecparamarrayvalorNode2);
        }
	nodeList.add(pspecparamarrayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AVariavelSpecParamArray */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecParamArray pspecparamarrayNode1;
        {
            // Block
        PSpecParamArrayVariavel pspecparamarrayvariavelNode2;
        pspecparamarrayvariavelNode2 = (PSpecParamArrayVariavel)nodeArrayList1.get(0);

        pspecparamarrayNode1 = new AVariavelSpecParamArray(pspecparamarrayvariavelNode2);
        }
	nodeList.add(pspecparamarrayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ASpecParamArrayValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecParamArrayValor pspecparamarrayvalorNode1;
        {
            // Block
        PIdentificadores pidentificadoresNode2;
        TDoisPontos tdoispontosNode3;
        PSchemaArray pschemaarrayNode4;
        pidentificadoresNode2 = (PIdentificadores)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pschemaarrayNode4 = (PSchemaArray)nodeArrayList3.get(0);

        pspecparamarrayvalorNode1 = new ASpecParamArrayValor(pidentificadoresNode2, tdoispontosNode3, pschemaarrayNode4);
        }
	nodeList.add(pspecparamarrayvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ASpecParamArrayVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecParamArrayVariavel pspecparamarrayvariavelNode1;
        {
            // Block
        TVar tvarNode2;
        PIdentificadores pidentificadoresNode3;
        TDoisPontos tdoispontosNode4;
        PSchemaArray pschemaarrayNode5;
        tvarNode2 = (TVar)nodeArrayList1.get(0);
        pidentificadoresNode3 = (PIdentificadores)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pschemaarrayNode5 = (PSchemaArray)nodeArrayList4.get(0);

        pspecparamarrayvariavelNode1 = new ASpecParamArrayVariavel(tvarNode2, pidentificadoresNode3, tdoispontosNode4, pschemaarrayNode5);
        }
	nodeList.add(pspecparamarrayvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ASchemaArray */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSchemaArray pschemaarrayNode1;
        {
            // Block
        TArray tarrayNode2;
        TAbreColchete tabrecolcheteNode3;
        PSpecTiposIndices pspectiposindicesNode4;
        TFechaColchete tfechacolcheteNode5;
        TOf tofNode6;
        TAbreParenteses tabreparentesesNode7;
        PIdentificadorSchemaArray pidentificadorschemaarrayNode8;
        TFechaParenteses tfechaparentesesNode9;
        tarrayNode2 = (TArray)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbreColchete)nodeArrayList2.get(0);
        pspectiposindicesNode4 = (PSpecTiposIndices)nodeArrayList3.get(0);
        tfechacolcheteNode5 = (TFechaColchete)nodeArrayList4.get(0);
        tofNode6 = (TOf)nodeArrayList5.get(0);
        tabreparentesesNode7 = (TAbreParenteses)nodeArrayList6.get(0);
        pidentificadorschemaarrayNode8 = (PIdentificadorSchemaArray)nodeArrayList7.get(0);
        tfechaparentesesNode9 = (TFechaParenteses)nodeArrayList8.get(0);

        pschemaarrayNode1 = new ASchemaArray(tarrayNode2, tabrecolcheteNode3, pspectiposindicesNode4, tfechacolcheteNode5, tofNode6, tabreparentesesNode7, pidentificadorschemaarrayNode8, tfechaparentesesNode9);
        }
	nodeList.add(pschemaarrayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AUnicoSpecTiposIndices */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecTiposIndices pspectiposindicesNode1;
        {
            // Block
        PSpecTipoIndice pspectipoindiceNode2;
        pspectipoindiceNode2 = (PSpecTipoIndice)nodeArrayList1.get(0);

        pspectiposindicesNode1 = new AUnicoSpecTiposIndices(pspectipoindiceNode2);
        }
	nodeList.add(pspectiposindicesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AMultiploSpecTiposIndices */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecTiposIndices pspectiposindicesNode1;
        {
            // Block
        PSpecTiposIndices pspectiposindicesNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        PSpecTipoIndice pspectipoindiceNode4;
        pspectiposindicesNode2 = (PSpecTiposIndices)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);
        pspectipoindiceNode4 = (PSpecTipoIndice)nodeArrayList3.get(0);

        pspectiposindicesNode1 = new AMultiploSpecTiposIndices(pspectiposindicesNode2, tpontoevirgulaNode3, pspectipoindiceNode4);
        }
	nodeList.add(pspectiposindicesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ASpecTipoIndice */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSpecTipoIndice pspectipoindiceNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TPontoPonto tpontopontoNode3;
        TIdentificador tidentificadorNode4;
        TDoisPontos tdoispontosNode5;
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode6;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tpontopontoNode3 = (TPontoPonto)nodeArrayList2.get(0);
        tidentificadorNode4 = (TIdentificador)nodeArrayList3.get(0);
        tdoispontosNode5 = (TDoisPontos)nodeArrayList4.get(0);
        pidentificadortipoordinalNode6 = (PIdentificadorTipoOrdinal)nodeArrayList5.get(0);

        pspectipoindiceNode1 = new ASpecTipoIndice(tidentificadorNode2, tpontopontoNode3, tidentificadorNode4, tdoispontosNode5, pidentificadortipoordinalNode6);
        }
	nodeList.add(pspectipoindiceNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AIdentificadorIdentificadorSchemaArray */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorSchemaArray pidentificadorschemaarrayNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pidentificadorschemaarrayNode1 = new AIdentificadorIdentificadorSchemaArray(tidentificadorNode2);
        }
	nodeList.add(pidentificadorschemaarrayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AArrayIdentificadorSchemaArray */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorSchemaArray pidentificadorschemaarrayNode1;
        {
            // Block
        PSchemaArray pschemaarrayNode2;
        pschemaarrayNode2 = (PSchemaArray)nodeArrayList1.get(0);

        pidentificadorschemaarrayNode1 = new AArrayIdentificadorSchemaArray(pschemaarrayNode2);
        }
	nodeList.add(pidentificadorschemaarrayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AExistenteTipoResultado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoResultado ptiporesultadoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        ptiporesultadoNode1 = new AExistenteTipoResultado(tidentificadorNode2);
        }
	nodeList.add(ptiporesultadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AOrdinalTipoResultado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoResultado ptiporesultadoNode1;
        {
            // Block
        PIdentificadorTipoOrdinal pidentificadortipoordinalNode2;
        pidentificadortipoordinalNode2 = (PIdentificadorTipoOrdinal)nodeArrayList1.get(0);

        ptiporesultadoNode1 = new AOrdinalTipoResultado(pidentificadortipoordinalNode2);
        }
	nodeList.add(ptiporesultadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ASentencaComposta */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaComposta psentencacompostaNode1;
        {
            // Block
        TBegin tbeginNode2;
        PSequenciaSentencas psequenciasentencasNode3;
        TEnd tendNode4;
        tbeginNode2 = (TBegin)nodeArrayList1.get(0);
        psequenciasentencasNode3 = (PSequenciaSentencas)nodeArrayList2.get(0);
        tendNode4 = (TEnd)nodeArrayList3.get(0);

        psentencacompostaNode1 = new ASentencaComposta(tbeginNode2, psequenciasentencasNode3, tendNode4);
        }
	nodeList.add(psentencacompostaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AUnicoSequenciaSentencas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSequenciaSentencas psequenciasentencasNode1;
        {
            // Block
        PSentenca psentencaNode2;
        psentencaNode2 = (PSentenca)nodeArrayList1.get(0);

        psequenciasentencasNode1 = new AUnicoSequenciaSentencas(psentencaNode2);
        }
	nodeList.add(psequenciasentencasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AMultiploSequenciaSentencas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSequenciaSentencas psequenciasentencasNode1;
        {
            // Block
        PSequenciaSentencas psequenciasentencasNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        PSentenca psentencaNode4;
        psequenciasentencasNode2 = (PSequenciaSentencas)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);
        psentencaNode4 = (PSentenca)nodeArrayList3.get(0);

        psequenciasentencasNode1 = new AMultiploSequenciaSentencas(psequenciasentencasNode2, tpontoevirgulaNode3, psentencaNode4);
        }
	nodeList.add(psequenciasentencasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ASentenca */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentenca psentencaNode1;
        {
            // Block
        PLabelSentenca plabelsentencaNode2;
        PDefinicaoSentenca pdefinicaosentencaNode3;
        plabelsentencaNode2 = (PLabelSentenca)nodeArrayList1.get(0);
        pdefinicaosentencaNode3 = (PDefinicaoSentenca)nodeArrayList2.get(0);

        psentencaNode1 = new ASentenca(plabelsentencaNode2, pdefinicaosentencaNode3);
        }
	nodeList.add(psentencaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ALabelSentenca */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLabelSentenca plabelsentencaNode1;
        {
            // Block
        PLabel plabelNode2;
        TDoisPontos tdoispontosNode3;
        plabelNode2 = (PLabel)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);

        plabelsentencaNode1 = new ALabelSentenca(plabelNode2, tdoispontosNode3);
        }
	nodeList.add(plabelsentencaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AEmptyLabelSentenca */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PLabelSentenca plabelsentencaNode1;
        {
            // Block

        plabelsentencaNode1 = new AEmptyLabelSentenca();
        }
	nodeList.add(plabelsentencaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ASimplesDefinicaoSentenca */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefinicaoSentenca pdefinicaosentencaNode1;
        {
            // Block
        PSentencaSimples psentencasimplesNode2;
        psentencasimplesNode2 = (PSentencaSimples)nodeArrayList1.get(0);

        pdefinicaosentencaNode1 = new ASimplesDefinicaoSentenca(psentencasimplesNode2);
        }
	nodeList.add(pdefinicaosentencaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AEstruturadaDefinicaoSentenca */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefinicaoSentenca pdefinicaosentencaNode1;
        {
            // Block
        PSentencaEstruturada psentencaestruturadaNode2;
        psentencaestruturadaNode2 = (PSentencaEstruturada)nodeArrayList1.get(0);

        pdefinicaosentencaNode1 = new AEstruturadaDefinicaoSentenca(psentencaestruturadaNode2);
        }
	nodeList.add(pdefinicaosentencaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AAtribuicaoSentencaSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaSimples psentencasimplesNode1;
        {
            // Block
        PSentencaAtribuicao psentencaatribuicaoNode2;
        psentencaatribuicaoNode2 = (PSentencaAtribuicao)nodeArrayList1.get(0);

        psentencasimplesNode1 = new AAtribuicaoSentencaSimples(psentencaatribuicaoNode2);
        }
	nodeList.add(psentencasimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AProcedureSentencaSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaSimples psentencasimplesNode1;
        {
            // Block
        PSentencaProcedure psentencaprocedureNode2;
        psentencaprocedureNode2 = (PSentencaProcedure)nodeArrayList1.get(0);

        psentencasimplesNode1 = new AProcedureSentencaSimples(psentencaprocedureNode2);
        }
	nodeList.add(psentencasimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AGotoSentencaSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaSimples psentencasimplesNode1;
        {
            // Block
        PSentencaGoto psentencagotoNode2;
        psentencagotoNode2 = (PSentencaGoto)nodeArrayList1.get(0);

        psentencasimplesNode1 = new AGotoSentencaSimples(psentencagotoNode2);
        }
	nodeList.add(psentencasimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AEmptySentencaSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PSentencaSimples psentencasimplesNode1;
        {
            // Block

        psentencasimplesNode1 = new AEmptySentencaSimples();
        }
	nodeList.add(psentencasimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ASentencaAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaAtribuicao psentencaatribuicaoNode1;
        {
            // Block
        PAcessoVariavel pacessovariavelNode2;
        TAtribuicao tatribuicaoNode3;
        PExpressao pexpressaoNode4;
        pacessovariavelNode2 = (PAcessoVariavel)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        psentencaatribuicaoNode1 = new ASentencaAtribuicao(pacessovariavelNode2, tatribuicaoNode3, pexpressaoNode4);
        }
	nodeList.add(psentencaatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ASentencaProcedure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaProcedure psentencaprocedureNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        PParametrosReais pparametrosreaisNode3;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        pparametrosreaisNode3 = (PParametrosReais)nodeArrayList2.get(0);

        psentencaprocedureNode1 = new ASentencaProcedure(tidentificadorNode2, pparametrosreaisNode3);
        }
	nodeList.add(psentencaprocedureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AParametrosReais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametrosReais pparametrosreaisNode1;
        {
            // Block
        TAbreParenteses tabreparentesesNode2;
        PDefinicaoParametrosReais pdefinicaoparametrosreaisNode3;
        TFechaParenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreParenteses)nodeArrayList1.get(0);
        pdefinicaoparametrosreaisNode3 = (PDefinicaoParametrosReais)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaParenteses)nodeArrayList3.get(0);

        pparametrosreaisNode1 = new AParametrosReais(tabreparentesesNode2, pdefinicaoparametrosreaisNode3, tfechaparentesesNode4);
        }
	nodeList.add(pparametrosreaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AEmptyParametrosReais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametrosReais pparametrosreaisNode1;
        {
            // Block

        pparametrosreaisNode1 = new AEmptyParametrosReais();
        }
	nodeList.add(pparametrosreaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce AUnicoDefinicaoParametrosReais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefinicaoParametrosReais pdefinicaoparametrosreaisNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);

        pdefinicaoparametrosreaisNode1 = new AUnicoDefinicaoParametrosReais(pexpressaoNode2);
        }
	nodeList.add(pdefinicaoparametrosreaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AMultiploDefinicaoParametrosReais */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefinicaoParametrosReais pdefinicaoparametrosreaisNode1;
        {
            // Block
        PDefinicaoParametrosReais pdefinicaoparametrosreaisNode2;
        TVirgula tvirgulaNode3;
        PExpressao pexpressaoNode4;
        pdefinicaoparametrosreaisNode2 = (PDefinicaoParametrosReais)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pdefinicaoparametrosreaisNode1 = new AMultiploDefinicaoParametrosReais(pdefinicaoparametrosreaisNode2, tvirgulaNode3, pexpressaoNode4);
        }
	nodeList.add(pdefinicaoparametrosreaisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ACompostaSentencaEstruturada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaEstruturada psentencaestruturadaNode1;
        {
            // Block
        PSentencaComposta psentencacompostaNode2;
        psentencacompostaNode2 = (PSentencaComposta)nodeArrayList1.get(0);

        psentencaestruturadaNode1 = new ACompostaSentencaEstruturada(psentencacompostaNode2);
        }
	nodeList.add(psentencaestruturadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AWhileSentencaEstruturada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaEstruturada psentencaestruturadaNode1;
        {
            // Block
        PSentencaWhile psentencawhileNode2;
        psentencawhileNode2 = (PSentencaWhile)nodeArrayList1.get(0);

        psentencaestruturadaNode1 = new AWhileSentencaEstruturada(psentencawhileNode2);
        }
	nodeList.add(psentencaestruturadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ASentencaWhile */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaWhile psentencawhileNode1;
        {
            // Block
        TWhile twhileNode2;
        PExpressao pexpressaoNode3;
        TDo tdoNode4;
        PSentenca psentencaNode5;
        twhileNode2 = (TWhile)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);
        tdoNode4 = (TDo)nodeArrayList3.get(0);
        psentencaNode5 = (PSentenca)nodeArrayList4.get(0);

        psentencawhileNode1 = new ASentencaWhile(twhileNode2, pexpressaoNode3, tdoNode4, psentencaNode5);
        }
	nodeList.add(psentencawhileNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ASentencaGoto */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSentencaGoto psentencagotoNode1;
        {
            // Block
        TGoto tgotoNode2;
        PLabel plabelNode3;
        tgotoNode2 = (TGoto)nodeArrayList1.get(0);
        plabelNode3 = (PLabel)nodeArrayList2.get(0);

        psentencagotoNode1 = new ASentencaGoto(tgotoNode2, plabelNode3);
        }
	nodeList.add(psentencagotoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce AAcessoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAcessoVariavel pacessovariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pacessovariavelNode1 = new AAcessoVariavel(tidentificadorNode2);
        }
	nodeList.add(pacessovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce AIndexadaAcessoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAcessoVariavel pacessovariavelNode1;
        {
            // Block
        PVariavelIndexada pvariavelindexadaNode2;
        pvariavelindexadaNode2 = (PVariavelIndexada)nodeArrayList1.get(0);

        pacessovariavelNode1 = new AIndexadaAcessoVariavel(pvariavelindexadaNode2);
        }
	nodeList.add(pacessovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce AVariavelIndexada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavelIndexada pvariavelindexadaNode1;
        {
            // Block
        PAcessoVariavel pacessovariavelNode2;
        TAbreColchete tabrecolcheteNode3;
        PExpressoes pexpressoesNode4;
        TFechaColchete tfechacolcheteNode5;
        pacessovariavelNode2 = (PAcessoVariavel)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbreColchete)nodeArrayList2.get(0);
        pexpressoesNode4 = (PExpressoes)nodeArrayList3.get(0);
        tfechacolcheteNode5 = (TFechaColchete)nodeArrayList4.get(0);

        pvariavelindexadaNode1 = new AVariavelIndexada(pacessovariavelNode2, tabrecolcheteNode3, pexpressoesNode4, tfechacolcheteNode5);
        }
	nodeList.add(pvariavelindexadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce AUnicoExpressoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressoes pexpressoesNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);

        pexpressoesNode1 = new AUnicoExpressoes(pexpressaoNode2);
        }
	nodeList.add(pexpressoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce AMultiploExpressoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressoes pexpressoesNode1;
        {
            // Block
        PExpressoes pexpressoesNode2;
        TVirgula tvirgulaNode3;
        PExpressao pexpressaoNode4;
        pexpressoesNode2 = (PExpressoes)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pexpressoesNode1 = new AMultiploExpressoes(pexpressoesNode2, tvirgulaNode3, pexpressaoNode4);
        }
	nodeList.add(pexpressoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce AExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressaoSimples pexpressaosimplesNode2;
        PExpressaoRelacional pexpressaorelacionalNode3;
        pexpressaosimplesNode2 = (PExpressaoSimples)nodeArrayList1.get(0);
        pexpressaorelacionalNode3 = (PExpressaoRelacional)nodeArrayList2.get(0);

        pexpressaoNode1 = new AExpressao(pexpressaosimplesNode2, pexpressaorelacionalNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce AExpressaoRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoRelacional pexpressaorelacionalNode1;
        {
            // Block
        POperadorRelacional poperadorrelacionalNode2;
        PExpressaoSimples pexpressaosimplesNode3;
        poperadorrelacionalNode2 = (POperadorRelacional)nodeArrayList1.get(0);
        pexpressaosimplesNode3 = (PExpressaoSimples)nodeArrayList2.get(0);

        pexpressaorelacionalNode1 = new AExpressaoRelacional(poperadorrelacionalNode2, pexpressaosimplesNode3);
        }
	nodeList.add(pexpressaorelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new102() /* reduce AEmptyExpressaoRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PExpressaoRelacional pexpressaorelacionalNode1;
        {
            // Block

        pexpressaorelacionalNode1 = new AEmptyExpressaoRelacional();
        }
	nodeList.add(pexpressaorelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new103() /* reduce AUnicoExpressaoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoSimples pexpressaosimplesNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpressaosimplesNode1 = new AUnicoExpressaoSimples(ptermoNode2);
        }
	nodeList.add(pexpressaosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new104() /* reduce AMultiploExpressaoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoSimples pexpressaosimplesNode1;
        {
            // Block
        PExpressaoSimples pexpressaosimplesNode2;
        POperadorAditivo poperadoraditivoNode3;
        PTermo ptermoNode4;
        pexpressaosimplesNode2 = (PExpressaoSimples)nodeArrayList1.get(0);
        poperadoraditivoNode3 = (POperadorAditivo)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaosimplesNode1 = new AMultiploExpressaoSimples(pexpressaosimplesNode2, poperadoraditivoNode3, ptermoNode4);
        }
	nodeList.add(pexpressaosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new105() /* reduce AUnicoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AUnicoTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new106() /* reduce AMultiploTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        POperadorMultiplicativo poperadormultiplicativoNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        poperadormultiplicativoNode3 = (POperadorMultiplicativo)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultiploTermo(ptermoNode2, poperadormultiplicativoNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new107() /* reduce AVariavelFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PAcessoVariavel pacessovariavelNode2;
        pacessovariavelNode2 = (PAcessoVariavel)nodeArrayList1.get(0);

        pfatorNode1 = new AVariavelFator(pacessovariavelNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new108() /* reduce AInteiroFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TConstInteiro tconstinteiroNode2;
        tconstinteiroNode2 = (TConstInteiro)nodeArrayList1.get(0);

        pfatorNode1 = new AInteiroFator(tconstinteiroNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new109() /* reduce ARealFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TConstReal tconstrealNode2;
        tconstrealNode2 = (TConstReal)nodeArrayList1.get(0);

        pfatorNode1 = new ARealFator(tconstrealNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new110() /* reduce AStringFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TConstString tconststringNode2;
        tconststringNode2 = (TConstString)nodeArrayList1.get(0);

        pfatorNode1 = new AStringFator(tconststringNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new111() /* reduce AExpressaoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAbreParenteses tabreparentesesNode2;
        PExpressao pexpressaoNode3;
        TFechaParenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreParenteses)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaParenteses)nodeArrayList3.get(0);

        pfatorNode1 = new AExpressaoFator(tabreparentesesNode2, pexpressaoNode3, tfechaparentesesNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new112() /* reduce AFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TNot tnotNode2;
        PFator pfatorNode3;
        tnotNode2 = (TNot)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList2.get(0);

        pfatorNode1 = new AFator(tnotNode2, pfatorNode3);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new113() /* reduce AMenorOperadorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorRelacional poperadorrelacionalNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        poperadorrelacionalNode1 = new AMenorOperadorRelacional(tmenorNode2);
        }
	nodeList.add(poperadorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new114() /* reduce AMenorIgualOperadorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorRelacional poperadorrelacionalNode1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        poperadorrelacionalNode1 = new AMenorIgualOperadorRelacional(tmenorigualNode2);
        }
	nodeList.add(poperadorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new115() /* reduce AMaiorOperadorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorRelacional poperadorrelacionalNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        poperadorrelacionalNode1 = new AMaiorOperadorRelacional(tmaiorNode2);
        }
	nodeList.add(poperadorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new116() /* reduce AMaiorIgualOperadorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorRelacional poperadorrelacionalNode1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        poperadorrelacionalNode1 = new AMaiorIgualOperadorRelacional(tmaiorigualNode2);
        }
	nodeList.add(poperadorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new117() /* reduce AIgualOperadorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorRelacional poperadorrelacionalNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        poperadorrelacionalNode1 = new AIgualOperadorRelacional(tigualNode2);
        }
	nodeList.add(poperadorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new118() /* reduce ADiferenteOperadorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorRelacional poperadorrelacionalNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        poperadorrelacionalNode1 = new ADiferenteOperadorRelacional(tdiferenteNode2);
        }
	nodeList.add(poperadorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new119() /* reduce ASomaOperadorAditivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorAditivo poperadoraditivoNode1;
        {
            // Block
        TSoma tsomaNode2;
        tsomaNode2 = (TSoma)nodeArrayList1.get(0);

        poperadoraditivoNode1 = new ASomaOperadorAditivo(tsomaNode2);
        }
	nodeList.add(poperadoraditivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new120() /* reduce ASubtracaoOperadorAditivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorAditivo poperadoraditivoNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);

        poperadoraditivoNode1 = new ASubtracaoOperadorAditivo(tsubtracaoNode2);
        }
	nodeList.add(poperadoraditivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new121() /* reduce AOrOperadorAditivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorAditivo poperadoraditivoNode1;
        {
            // Block
        TOr torNode2;
        torNode2 = (TOr)nodeArrayList1.get(0);

        poperadoraditivoNode1 = new AOrOperadorAditivo(torNode2);
        }
	nodeList.add(poperadoraditivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new122() /* reduce AMultiplicacaoOperadorMultiplicativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorMultiplicativo poperadormultiplicativoNode1;
        {
            // Block
        TMultiplicacao tmultiplicacaoNode2;
        tmultiplicacaoNode2 = (TMultiplicacao)nodeArrayList1.get(0);

        poperadormultiplicativoNode1 = new AMultiplicacaoOperadorMultiplicativo(tmultiplicacaoNode2);
        }
	nodeList.add(poperadormultiplicativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new123() /* reduce ADivisaoOperadorMultiplicativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorMultiplicativo poperadormultiplicativoNode1;
        {
            // Block
        TDivisao tdivisaoNode2;
        tdivisaoNode2 = (TDivisao)nodeArrayList1.get(0);

        poperadormultiplicativoNode1 = new ADivisaoOperadorMultiplicativo(tdivisaoNode2);
        }
	nodeList.add(poperadormultiplicativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new124() /* reduce AAndOperadorMultiplicativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorMultiplicativo poperadormultiplicativoNode1;
        {
            // Block
        TAnd tandNode2;
        tandNode2 = (TAnd)nodeArrayList1.get(0);

        poperadormultiplicativoNode1 = new AAndOperadorMultiplicativo(tandNode2);
        }
	nodeList.add(poperadormultiplicativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new125() /* reduce ADivOperadorMultiplicativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorMultiplicativo poperadormultiplicativoNode1;
        {
            // Block
        TDiv tdivNode2;
        tdivNode2 = (TDiv)nodeArrayList1.get(0);

        poperadormultiplicativoNode1 = new ADivOperadorMultiplicativo(tdivNode2);
        }
	nodeList.add(poperadormultiplicativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new126() /* reduce AModOperadorMultiplicativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadorMultiplicativo poperadormultiplicativoNode1;
        {
            // Block
        TMod tmodNode2;
        tmodNode2 = (TMod)nodeArrayList1.get(0);

        poperadormultiplicativoNode1 = new AModOperadorMultiplicativo(tmodNode2);
        }
	nodeList.add(poperadormultiplicativoNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {14, SHIFT, 1}, },
			{{-1, ERROR, 1}, {28, SHIFT, 4}, },
			{{-1, ERROR, 2}, {59, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {29, SHIFT, 5}, },
			{{-1, REDUCE, 1}, {32, SHIFT, 6}, },
			{{-1, REDUCE, 13}, {17, SHIFT, 7}, },
			{{-1, ERROR, 6}, {28, SHIFT, 10}, },
			{{-1, ERROR, 7}, {39, SHIFT, 12}, },
			{{-1, ERROR, 8}, {30, SHIFT, 15}, },
			{{-1, REDUCE, 18}, {20, SHIFT, 16}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 11}, {33, SHIFT, 18}, {34, SHIFT, 19}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 13}, {29, SHIFT, 20}, {34, SHIFT, 21}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 16}, {28, SHIFT, 22}, },
			{{-1, REDUCE, 38}, {15, SHIFT, 24}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 19}, {28, SHIFT, 26}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 21}, {39, SHIFT, 12}, },
			{{-1, ERROR, 22}, {46, SHIFT, 28}, },
			{{-1, ERROR, 23}, {29, SHIFT, 29}, {34, SHIFT, 30}, },
			{{-1, ERROR, 24}, {28, SHIFT, 10}, },
			{{-1, REDUCE, 43}, {16, SHIFT, 34}, {18, SHIFT, 35}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 28}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, {4, SHIFT, 47}, {28, SHIFT, 48}, {32, SHIFT, 49}, {39, SHIFT, 50}, {55, SHIFT, 51}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 30}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, {4, SHIFT, 47}, {28, SHIFT, 48}, {32, SHIFT, 49}, {39, SHIFT, 50}, {55, SHIFT, 51}, },
			{{-1, ERROR, 31}, {34, SHIFT, 19}, {36, SHIFT, 61}, },
			{{-1, ERROR, 32}, {29, SHIFT, 62}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 34}, {28, SHIFT, 63}, },
			{{-1, ERROR, 35}, {28, SHIFT, 64}, },
			{{-1, ERROR, 36}, {12, SHIFT, 65}, },
			{{-1, REDUCE, 42}, {16, SHIFT, 34}, {18, SHIFT, 35}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 39}, {29, SHIFT, 68}, },
			{{-1, ERROR, 40}, {29, SHIFT, 69}, },
			{{-1, ERROR, 41}, {29, SHIFT, 70}, },
			{{-1, ERROR, 42}, {29, SHIFT, 71}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 47}, {37, SHIFT, 72}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 49}, {28, SHIFT, 10}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 59}, {31, SHIFT, 74}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 61}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, {4, SHIFT, 47}, {28, SHIFT, 48}, {32, SHIFT, 49}, {39, SHIFT, 50}, {55, SHIFT, 51}, },
			{{-1, REDUCE, 37}, {28, SHIFT, 10}, },
			{{-1, REDUCE, 53}, {32, SHIFT, 77}, },
			{{-1, REDUCE, 53}, {32, SHIFT, 77}, },
			{{-1, REDUCE, 78}, {39, SHIFT, 12}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 13}, {17, SHIFT, 7}, },
			{{-1, REDUCE, 13}, {17, SHIFT, 7}, },
			{{-1, ERROR, 72}, {28, SHIFT, 86}, {32, SHIFT, 49}, {39, SHIFT, 50}, {55, SHIFT, 51}, },
			{{-1, ERROR, 73}, {33, SHIFT, 90}, {34, SHIFT, 19}, },
			{{-1, ERROR, 74}, {39, SHIFT, 50}, {55, SHIFT, 51}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 77}, {15, SHIFT, 92}, {28, SHIFT, 10}, },
			{{-1, ERROR, 78}, {36, SHIFT, 101}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 80}, {36, SHIFT, 102}, },
			{{-1, ERROR, 81}, {13, SHIFT, 103}, {29, SHIFT, 104}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 84}, {8, SHIFT, 105}, {12, SHIFT, 65}, {21, SHIFT, 106}, {28, SHIFT, 107}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 87}, {34, SHIFT, 118}, {38, SHIFT, 119}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 34}, },
			{{-1, ERROR, 92}, {28, SHIFT, 10}, },
			{{-1, ERROR, 93}, {34, SHIFT, 19}, {36, SHIFT, 121}, },
			{{-1, ERROR, 94}, {29, SHIFT, 122}, {33, SHIFT, 123}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 101}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, {28, SHIFT, 124}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 78}, {39, SHIFT, 12}, },
			{{-1, ERROR, 105}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, ERROR, 106}, {39, SHIFT, 12}, },
			{{-1, REDUCE, 88}, {32, SHIFT, 140}, {35, REDUCE, 95}, {37, REDUCE, 95}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 116}, {35, SHIFT, 142}, {37, SHIFT, 143}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 118}, {28, SHIFT, 86}, {32, SHIFT, 49}, {39, SHIFT, 50}, {55, SHIFT, 51}, },
			{{-1, ERROR, 119}, {11, SHIFT, 145}, },
			{{-1, ERROR, 120}, {34, SHIFT, 19}, {36, SHIFT, 146}, },
			{{-1, ERROR, 121}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, {4, SHIFT, 147}, {28, SHIFT, 148}, },
			{{-1, ERROR, 122}, {15, SHIFT, 92}, {28, SHIFT, 10}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 128}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 130}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 107}, {37, SHIFT, 143}, },
			{{-1, ERROR, 135}, {19, SHIFT, 155}, },
			{{-1, REDUCE, 102}, {24, SHIFT, 156}, {41, SHIFT, 157}, {42, SHIFT, 158}, {43, SHIFT, 159}, {44, SHIFT, 160}, {45, SHIFT, 161}, {46, SHIFT, 162}, {47, SHIFT, 163}, {48, SHIFT, 164}, },
			{{-1, REDUCE, 103}, {23, SHIFT, 168}, {25, SHIFT, 169}, {26, SHIFT, 170}, {49, SHIFT, 171}, {50, SHIFT, 172}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 94}, },
			{{-1, ERROR, 140}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 142}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, ERROR, 143}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 145}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, {4, SHIFT, 47}, {28, SHIFT, 48}, {32, SHIFT, 49}, {39, SHIFT, 50}, {55, SHIFT, 51}, },
			{{-1, ERROR, 146}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, {4, SHIFT, 147}, {28, SHIFT, 148}, },
			{{-1, ERROR, 147}, {37, SHIFT, 182}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 112}, },
			{{-1, ERROR, 154}, {33, SHIFT, 183}, },
			{{-1, REDUCE, 78}, {39, SHIFT, 12}, },
			{{-1, REDUCE, 121}, },
			{{-1, REDUCE, 113}, },
			{{-1, REDUCE, 114}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 116}, },
			{{-1, REDUCE, 118}, },
			{{-1, REDUCE, 117}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 120}, },
			{{-1, REDUCE, 100}, },
			{{-1, ERROR, 166}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, ERROR, 167}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 125}, },
			{{-1, REDUCE, 126}, },
			{{-1, REDUCE, 122}, },
			{{-1, REDUCE, 123}, },
			{{-1, ERROR, 173}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, ERROR, 174}, {33, SHIFT, 188}, {34, SHIFT, 189}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 177}, {34, SHIFT, 190}, {38, SHIFT, 191}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 64}, },
			{{-1, ERROR, 182}, {28, SHIFT, 192}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 101}, {24, SHIFT, 156}, {47, SHIFT, 163}, {48, SHIFT, 164}, },
			{{-1, REDUCE, 104}, {23, SHIFT, 168}, {25, SHIFT, 169}, {26, SHIFT, 170}, {49, SHIFT, 171}, {50, SHIFT, 172}, },
			{{-1, REDUCE, 106}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 189}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, ERROR, 190}, {27, SHIFT, 128}, {28, SHIFT, 129}, {32, SHIFT, 130}, {39, SHIFT, 131}, {40, SHIFT, 132}, {55, SHIFT, 133}, },
			{{-1, REDUCE, 97}, },
			{{-1, ERROR, 192}, {31, SHIFT, 197}, },
			{{-1, ERROR, 193}, {29, SHIFT, 198}, {38, SHIFT, 199}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 99}, },
			{{-1, ERROR, 197}, {28, SHIFT, 200}, },
			{{-1, ERROR, 198}, {28, SHIFT, 192}, },
			{{-1, ERROR, 199}, {11, SHIFT, 202}, },
			{{-1, ERROR, 200}, {36, SHIFT, 203}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 202}, {32, SHIFT, 204}, },
			{{-1, ERROR, 203}, {0, SHIFT, 43}, {1, SHIFT, 44}, {2, SHIFT, 45}, {3, SHIFT, 46}, },
			{{-1, ERROR, 204}, {4, SHIFT, 147}, {28, SHIFT, 206}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 208}, {33, SHIFT, 209}, },
			{{-1, REDUCE, 65}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 8}, {70, 84}, {71, 85}, },
			{{-1, 31}, {6, 11}, {49, 73}, {77, 93}, {92, 120}, {122, 93}, },
			{{-1, 52}, {101, 125}, {121, 149}, {146, 149}, {203, 205}, },
			{{-1, 150}, {146, 180}, },
			{{-1, 9}, },
			{{-1, 13}, },
			{{-1, 80}, {7, 14}, {21, 27}, {106, 139}, },
			{{-1, 17}, },
			{{-1, 23}, },
			{{-1, 53}, {30, 60}, {61, 75}, {145, 179}, },
			{{-1, 54}, },
			{{-1, 55}, },
			{{-1, 87}, },
			{{-1, 88}, {118, 144}, },
			{{-1, 56}, {72, 89}, {118, 89}, },
			{{-1, 57}, },
			{{-1, 58}, },
			{{-1, 59}, {74, 91}, },
			{{-1, 25}, },
			{{-1, 32}, },
			{{-1, 33}, {62, 76}, },
			{{-1, 36}, },
			{{-1, 37}, },
			{{-1, 38}, {37, 67}, },
			{{-1, 39}, },
			{{-1, 40}, },
			{{-1, 41}, },
			{{-1, 42}, },
			{{-1, 78}, {64, 79}, },
			{{-1, 94}, },
			{{-1, 95}, {122, 152}, },
			{{-1, 96}, },
			{{-1, 97}, },
			{{-1, 98}, },
			{{-1, 99}, },
			{{-1, 100}, },
			{{-1, 151}, {146, 181}, {204, 207}, },
			{{-1, 193}, },
			{{-1, 194}, {198, 201}, },
			{{-1, 208}, },
			{{-1, 126}, },
			{{-1, 66}, {83, 108}, },
			{{-1, 81}, },
			{{-1, 82}, {104, 127}, {155, 184}, },
			{{-1, 83}, },
			{{-1, 109}, },
			{{-1, 110}, },
			{{-1, 111}, },
			{{-1, 112}, },
			{{-1, 141}, },
			{{-1, 174}, },
			{{-1, 113}, },
			{{-1, 114}, },
			{{-1, 115}, },
			{{-1, 134}, {83, 116}, },
			{{-1, 117}, },
			{{-1, 177}, },
			{{-1, 135}, {130, 154}, {140, 175}, {142, 176}, {143, 178}, {189, 195}, {190, 196}, },
			{{-1, 165}, },
			{{-1, 136}, {166, 185}, },
			{{-1, 137}, {167, 186}, },
			{{-1, 138}, {128, 153}, {173, 187}, },
			{{-1, 166}, },
			{{-1, 167}, },
			{{-1, 173}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: program",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: ';', '('",
			"expecting: begin, var, function, label, procedure, type",
			"expecting: const inteiro",
			"expecting: '.'",
			"expecting: begin, var, function, procedure, type",
			"expecting: ')', ',', ':'",
			"expecting: ')', ','",
			"expecting: end, ';', ',', ':'",
			"expecting: ';', ','",
			"expecting: begin, var, function, procedure",
			"expecting: '='",
			"expecting: begin, function, procedure",
			"expecting: integer, string, real, boolean, array, identificador, '(', const inteiro, const string",
			"expecting: ',', ':'",
			"expecting: begin",
			"expecting: ';', ')', ',', ']'",
			"expecting: '['",
			"expecting: ';', '..', ',', ']'",
			"expecting: ';', ',', ']'",
			"expecting: '..'",
			"expecting: begin, function, procedure, identificador",
			"expecting: '(', ':'",
			"expecting: while, begin, end, goto, identificador, ';', const inteiro",
			"expecting: ';', '.'",
			"expecting: identificador, '(', const inteiro, const string",
			"expecting: const inteiro, const string",
			"expecting: var, identificador",
			"expecting: ':'",
			"expecting: end, ';'",
			"expecting: while, begin, end, goto, identificador, ';'",
			"expecting: ',', ']'",
			"expecting: ';', ')'",
			"expecting: integer, string, real, boolean, identificador",
			"expecting: end, ';', '.'",
			"expecting: not, identificador, '(', const inteiro, const real, const string",
			"expecting: end, ';', '(', ':=', '['",
			"expecting: ':=', '['",
			"expecting: end, do, and, or, div, mod, ';', ')', ',', ':=', '[', ']', '<', '<=', '>', '>=', '<>', '=', '+', '-', '*', '/'",
			"expecting: of",
			"expecting: integer, string, real, boolean, array, identificador",
			"expecting: ';', ':'",
			"expecting: end, do, and, or, div, mod, ';', ')', ',', '[', ']', '<', '<=', '>', '>=', '<>', '=', '+', '-', '*', '/'",
			"expecting: end, do, and, or, div, mod, ';', ')', ',', ']', '<', '<=', '>', '>=', '<>', '=', '+', '-', '*', '/'",
			"expecting: do",
			"expecting: end, do, or, ';', ')', ',', ']', '<', '<=', '>', '>=', '<>', '=', '+', '-'",
			"expecting: ')'",
			"expecting: end, do, ';', ')', ',', ']'",
			"expecting: end, do, or, ';', ')', ',', ']', '+', '-'",
			"expecting: ';', ']'",
			"expecting: '('",
			"expecting: integer, string, real, boolean",
			"expecting: array, identificador",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11, 12, 12, 2, 1, 13, 3, 1, 8, 6, 14, 12, 1, 15, 9, 12, 16, 13, 16, 17, 3, 3, 1, 1, 18, 15, 15, 3, 3, 3, 3, 19, 19, 19, 19, 20, 12, 1, 21, 21, 12, 12, 12, 12, 12, 22, 22, 23, 12, 16, 24, 25, 4, 26, 27, 15, 15, 15, 5, 5, 28, 10, 29, 3, 3, 30, 31, 3, 31, 32, 32, 33, 3, 3, 34, 34, 34, 34, 22, 22, 1, 17, 35, 35, 35, 35, 35, 35, 35, 36, 33, 37, 26, 38, 6, 39, 32, 32, 32, 32, 32, 32, 32, 32, 40, 41, 28, 42, 17, 43, 30, 44, 3, 3, 3, 32, 38, 45, 38, 46, 46, 46, 45, 47, 48, 46, 46, 32, 38, 32, 38, 38, 34, 16, 43, 20, 35, 35, 35, 35, 35, 46, 49, 26, 38, 38, 38, 38, 38, 38, 38, 38, 38, 50, 38, 38, 38, 38, 38, 38, 38, 38, 10, 10, 32, 34, 34, 12, 35, 35, 1, 46, 32, 51, 46, 46, 32, 38, 38, 41, 23, 52, 52, 10, 34, 1, 1, 42, 31, 52, 53, 54, 55, 52, 49, 49, 49, 35, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
