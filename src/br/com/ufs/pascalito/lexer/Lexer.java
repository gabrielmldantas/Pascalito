/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.com.ufs.pascalito.lexer;

import java.io.*;
import br.com.ufs.pascalito.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                                case 0: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteger(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArray(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThen(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFor(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCase(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOf(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBegin(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnd(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgram(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFunction(text, line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLabel(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProcedure(text, line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDo(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstBooleana(text, line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentificador(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoEVirgula(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPonto(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoPonto(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbreParenteses(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFechaParenteses(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtribuicao(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoisPontos(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbreColchete(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFechaColchete(line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstInteiro(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstReal(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstString(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOperadorRelacional(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOperadorLogico(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOperadorAritmetico(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentLinha(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentBloco(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentBlocoFim(line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentBlocoCorpo(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAsterico(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarra(line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {39, 39, 5}, {40, 40, 6}, {41, 41, 7}, {42, 42, 8}, {43, 43, 9}, {44, 44, 10}, {45, 45, 11}, {46, 46, 12}, {47, 47, 13}, {48, 57, 14}, {58, 58, 15}, {59, 59, 16}, {60, 60, 17}, {61, 61, 18}, {62, 62, 19}, {65, 65, 20}, {66, 66, 21}, {67, 67, 22}, {68, 68, 23}, {69, 69, 24}, {70, 70, 25}, {71, 72, 26}, {73, 73, 27}, {74, 75, 26}, {76, 76, 28}, {77, 77, 29}, {78, 78, 30}, {79, 79, 31}, {80, 80, 32}, {81, 81, 26}, {82, 82, 33}, {83, 83, 34}, {84, 84, 35}, {85, 85, 26}, {86, 86, 36}, {87, 87, 37}, {88, 90, 26}, {91, 91, 38}, {93, 93, 39}, {97, 97, 40}, {98, 98, 41}, {99, 99, 42}, {100, 100, 43}, {101, 101, 44}, {102, 102, 45}, {103, 104, 46}, {105, 105, 47}, {106, 107, 46}, {108, 108, 48}, {109, 109, 49}, {110, 110, 50}, {111, 111, 51}, {112, 112, 52}, {113, 113, 46}, {114, 114, 53}, {115, 115, 54}, {116, 116, 55}, {117, 117, 46}, {118, 118, 56}, {119, 119, 57}, {120, 122, 46}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 58}, {13, 32, -2}, },
            {{9, 32, -2}, },
            {{0, 9, 59}, {11, 12, 59}, {14, 38, 59}, {39, 39, 60}, {40, 127, 59}, },
            {},
            {},
            {{47, 47, 61}, },
            {},
            {},
            {},
            {{46, 46, 62}, {48, 57, 63}, },
            {{42, 42, 64}, {47, 47, 65}, },
            {{46, 46, 66}, {48, 57, 67}, },
            {{61, 61, 68}, },
            {},
            {{61, 61, 69}, {62, 62, 70}, },
            {},
            {{61, 61, 71}, },
            {{48, 57, 72}, {65, 77, 73}, {78, 78, 74}, {79, 81, 73}, {82, 82, 75}, {83, 90, 73}, {97, 109, 76}, {110, 110, 77}, {111, 113, 76}, {114, 114, 78}, {115, 122, 76}, },
            {{48, 57, 72}, {65, 68, 73}, {69, 69, 79}, {70, 78, 73}, {79, 79, 80}, {80, 90, 73}, {97, 100, 76}, {101, 101, 81}, {102, 110, 76}, {111, 111, 82}, {112, 122, 76}, },
            {{48, 57, 72}, {65, 65, 83}, {66, 90, 73}, {97, 97, 84}, {98, 122, 76}, },
            {{48, 57, 72}, {65, 72, 73}, {73, 73, 85}, {74, 78, 73}, {79, 79, 86}, {80, 90, 73}, {97, 104, 76}, {105, 105, 87}, {106, 110, 76}, {111, 111, 88}, {112, 122, 76}, },
            {{48, 57, 72}, {65, 75, 73}, {76, 76, 89}, {77, 77, 73}, {78, 78, 90}, {79, 90, 73}, {97, 107, 76}, {108, 108, 91}, {109, 109, 76}, {110, 110, 92}, {111, 122, 76}, },
            {{48, 57, 72}, {65, 65, 93}, {66, 78, 73}, {79, 79, 94}, {80, 84, 73}, {85, 85, 95}, {86, 90, 73}, {97, 97, 96}, {98, 110, 76}, {111, 111, 97}, {112, 116, 76}, {117, 117, 98}, {118, 122, 76}, },
            {{48, 57, 72}, {65, 90, 73}, {97, 122, 76}, },
            {{48, 57, 72}, {65, 69, 73}, {70, 70, 99}, {71, 77, 73}, {78, 78, 100}, {79, 90, 73}, {97, 101, 76}, {102, 102, 101}, {103, 109, 76}, {110, 110, 102}, {111, 122, 76}, },
            {{48, 57, 72}, {65, 65, 103}, {66, 90, 73}, {97, 97, 104}, {98, 122, 76}, },
            {{48, 57, 72}, {65, 78, 73}, {79, 79, 105}, {80, 90, 73}, {97, 110, 76}, {111, 111, 106}, {112, 122, 76}, },
            {{48, 78, -31}, {79, 79, 107}, {80, 110, -31}, {111, 111, 108}, {112, 122, 76}, },
            {{48, 69, -29}, {70, 70, 109}, {71, 81, 73}, {82, 82, 110}, {83, 90, 73}, {97, 101, 76}, {102, 102, 111}, {103, 113, 76}, {114, 114, 112}, {115, 122, 76}, },
            {{48, 57, 72}, {65, 81, 73}, {82, 82, 113}, {83, 90, 73}, {97, 113, 76}, {114, 114, 114}, {115, 122, 76}, },
            {{48, 68, -23}, {69, 69, 115}, {70, 90, 73}, {97, 100, 76}, {101, 101, 116}, {102, 122, 76}, },
            {{48, 57, 72}, {65, 83, 73}, {84, 84, 117}, {85, 90, 73}, {97, 115, 76}, {116, 116, 118}, {117, 122, 76}, },
            {{48, 57, 72}, {65, 71, 73}, {72, 72, 119}, {73, 81, 73}, {82, 82, 120}, {83, 90, 73}, {97, 103, 76}, {104, 104, 121}, {105, 113, 76}, {114, 114, 122}, {115, 122, 76}, },
            {{48, 57, 72}, {65, 65, 123}, {66, 90, 73}, {97, 97, 124}, {98, 122, 76}, },
            {{48, 71, -37}, {72, 72, 125}, {73, 90, 73}, {97, 103, 76}, {104, 104, 126}, {105, 122, 76}, },
            {},
            {},
            {{48, 122, -22}, },
            {{48, 122, -23}, },
            {{48, 122, -24}, },
            {{48, 122, -25}, },
            {{48, 122, -26}, },
            {{48, 122, -27}, },
            {{48, 122, -28}, },
            {{48, 122, -29}, },
            {{48, 122, -30}, },
            {{48, 122, -31}, },
            {{48, 122, -32}, },
            {{48, 122, -33}, },
            {{48, 122, -34}, },
            {{48, 122, -35}, },
            {{48, 122, -36}, },
            {{48, 122, -37}, },
            {{48, 122, -38}, },
            {{48, 122, -39}, },
            {{9, 32, -2}, },
            {{0, 127, -7}, },
            {},
            {},
            {},
            {{48, 57, 127}, {69, 69, 128}, {101, 101, 129}, },
            {},
            {{0, 9, 130}, {10, 10, 131}, {11, 12, 130}, {13, 13, 132}, {14, 127, 130}, },
            {{48, 57, 63}, },
            {{46, 57, -16}, },
            {},
            {},
            {},
            {},
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 57, 72}, {65, 67, 73}, {68, 68, 133}, {69, 90, 73}, {97, 99, 76}, {100, 100, 134}, {101, 122, 76}, },
            {{48, 81, -34}, {82, 82, 135}, {83, 113, -34}, {114, 114, 136}, {115, 122, 76}, },
            {{48, 122, -28}, },
            {{48, 122, -76}, },
            {{48, 122, -77}, },
            {{48, 57, 72}, {65, 70, 73}, {71, 71, 137}, {72, 90, 73}, {97, 102, 76}, {103, 103, 138}, {104, 122, 76}, },
            {{48, 78, -31}, {79, 79, 139}, {80, 110, -31}, {111, 111, 140}, {112, 122, 76}, },
            {{48, 122, -81}, },
            {{48, 122, -82}, },
            {{48, 57, 72}, {65, 82, 73}, {83, 83, 141}, {84, 90, 73}, {97, 114, 76}, {115, 115, 142}, {116, 122, 76}, },
            {{48, 122, -85}, },
            {{48, 57, 72}, {65, 85, 73}, {86, 86, 143}, {87, 90, 73}, {97, 117, 76}, {118, 118, 144}, {119, 122, 76}, },
            {{48, 122, -28}, },
            {{48, 122, -87}, },
            {{48, 122, -28}, },
            {{48, 82, -85}, {83, 83, 145}, {84, 114, -85}, {115, 115, 146}, {116, 122, 76}, },
            {{48, 67, -76}, {68, 68, 147}, {69, 99, -76}, {100, 100, 148}, {101, 122, 76}, },
            {{48, 122, -91}, },
            {{48, 122, -92}, },
            {{48, 75, -26}, {76, 76, 149}, {77, 90, 73}, {97, 107, 76}, {108, 108, 150}, {109, 122, 76}, },
            {{48, 81, -34}, {82, 82, 151}, {83, 113, -34}, {114, 114, 152}, {115, 122, 76}, },
            {{48, 77, -22}, {78, 78, 153}, {79, 90, 73}, {97, 109, 76}, {110, 110, 154}, {111, 122, 76}, },
            {{48, 122, -95}, },
            {{48, 122, -96}, },
            {{48, 122, -97}, },
            {{48, 122, -28}, },
            {{48, 83, -36}, {84, 84, 155}, {85, 115, -36}, {116, 116, 156}, {117, 122, 76}, },
            {{48, 122, -28}, },
            {{48, 122, -102}, },
            {{48, 57, 72}, {65, 65, 73}, {66, 66, 157}, {67, 90, 73}, {97, 97, 76}, {98, 98, 158}, {99, 122, 76}, },
            {{48, 122, -105}, },
            {{48, 67, -76}, {68, 68, 159}, {69, 99, -76}, {100, 100, 160}, {101, 122, 76}, },
            {{48, 122, -107}, },
            {{48, 83, -36}, {84, 84, 161}, {85, 115, -36}, {116, 116, 162}, {117, 122, 76}, },
            {{48, 122, -109}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 78, -31}, {79, 79, 163}, {80, 110, -31}, {111, 111, 164}, {112, 122, 76}, },
            {{48, 122, -115}, },
            {{48, 57, 72}, {65, 65, 165}, {66, 90, 73}, {97, 97, 166}, {98, 122, 76}, },
            {{48, 122, -117}, },
            {{48, 81, -34}, {82, 82, 167}, {83, 113, -34}, {114, 114, 168}, {115, 122, 76}, },
            {{48, 122, -119}, },
            {{48, 68, -23}, {69, 69, 169}, {70, 100, -35}, {101, 101, 170}, {102, 122, 76}, },
            {{48, 57, 72}, {65, 84, 73}, {85, 85, 171}, {86, 90, 73}, {97, 116, 76}, {117, 117, 172}, {118, 122, 76}, },
            {{48, 122, -121}, },
            {{48, 122, -122}, },
            {{48, 81, -34}, {82, 82, 173}, {83, 113, -34}, {114, 114, 174}, {115, 122, 76}, },
            {{48, 122, -125}, },
            {{48, 72, -25}, {73, 73, 175}, {74, 90, 73}, {97, 104, 76}, {105, 105, 176}, {106, 122, 76}, },
            {{48, 122, -127}, },
            {{48, 101, -65}, },
            {{43, 43, 177}, {45, 45, 178}, {48, 57, 179}, },
            {{43, 57, -130}, },
            {{0, 127, -67}, },
            {},
            {{10, 10, 180}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 57, 72}, {65, 65, 181}, {66, 90, 73}, {97, 97, 182}, {98, 122, 76}, },
            {{48, 122, -137}, },
            {{48, 72, -25}, {73, 73, 183}, {74, 104, -127}, {105, 105, 184}, {106, 122, 76}, },
            {{48, 122, -139}, },
            {{48, 75, -26}, {76, 76, 185}, {77, 107, -95}, {108, 108, 186}, {109, 122, 76}, },
            {{48, 122, -141}, },
            {{48, 68, -23}, {69, 69, 187}, {70, 100, -35}, {101, 101, 188}, {102, 122, 76}, },
            {{48, 122, -143}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 68, -23}, {69, 69, 189}, {70, 100, -35}, {101, 101, 190}, {102, 122, 76}, },
            {{48, 122, -147}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 82, -85}, {83, 83, 191}, {84, 114, -85}, {115, 115, 192}, {116, 122, 76}, },
            {{48, 122, -151}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 57, 72}, {65, 66, 73}, {67, 67, 193}, {68, 90, 73}, {97, 98, 76}, {99, 99, 194}, {100, 122, 76}, },
            {{48, 122, -155}, },
            {{48, 68, -23}, {69, 69, 195}, {70, 100, -35}, {101, 101, 196}, {102, 122, 76}, },
            {{48, 122, -157}, },
            {{48, 68, -23}, {69, 69, 197}, {70, 100, -35}, {101, 101, 198}, {102, 122, 76}, },
            {{48, 122, -159}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 66, -155}, {67, 67, 199}, {68, 70, 73}, {71, 71, 200}, {72, 90, 73}, {97, 98, 76}, {99, 99, 201}, {100, 102, 76}, {103, 103, 202}, {104, 122, 76}, },
            {{48, 122, -165}, },
            {{48, 75, -26}, {76, 76, 203}, {77, 107, -95}, {108, 108, 204}, {109, 122, 76}, },
            {{48, 122, -167}, },
            {{48, 72, -25}, {73, 73, 205}, {74, 104, -127}, {105, 105, 206}, {106, 122, 76}, },
            {{48, 122, -169}, },
            {{48, 77, -22}, {78, 78, 207}, {79, 109, -97}, {110, 110, 208}, {111, 122, 76}, },
            {{48, 122, -171}, },
            {{48, 68, -23}, {69, 69, 209}, {70, 100, -35}, {101, 101, 210}, {102, 122, 76}, },
            {{48, 122, -173}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 75, -26}, {76, 76, 211}, {77, 107, -95}, {108, 108, 212}, {109, 122, 76}, },
            {{48, 122, -177}, },
            {{48, 57, 179}, },
            {{48, 57, 179}, },
            {{48, 57, 213}, },
            {},
            {{48, 57, 72}, {65, 88, 73}, {89, 89, 214}, {90, 90, 73}, {97, 120, 76}, {121, 121, 215}, {122, 122, 76}, },
            {{48, 122, -183}, },
            {{48, 77, -22}, {78, 78, 216}, {79, 109, -97}, {110, 110, 217}, {111, 122, 76}, },
            {{48, 122, -185}, },
            {{48, 68, -23}, {69, 69, 218}, {70, 100, -35}, {101, 101, 219}, {102, 122, 76}, },
            {{48, 122, -187}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 68, -23}, {69, 69, 220}, {70, 100, -35}, {101, 101, 221}, {102, 122, 76}, },
            {{48, 122, -193}, },
            {{48, 83, -36}, {84, 84, 222}, {85, 115, -36}, {116, 116, 223}, {117, 122, 76}, },
            {{48, 122, -195}, },
            {{48, 70, -81}, {71, 71, 224}, {72, 102, -81}, {103, 103, 225}, {104, 122, 76}, },
            {{48, 122, -197}, },
            {{48, 75, -26}, {76, 76, 226}, {77, 107, -95}, {108, 108, 227}, {109, 122, 76}, },
            {{48, 122, -199}, },
            {{48, 68, -23}, {69, 69, 228}, {70, 100, -35}, {101, 101, 229}, {102, 122, 76}, },
            {{48, 81, -34}, {82, 82, 230}, {83, 113, -34}, {114, 114, 231}, {115, 122, 76}, },
            {{48, 122, -201}, },
            {{48, 122, -202}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 77, -22}, {78, 78, 232}, {79, 109, -97}, {110, 110, 233}, {111, 122, 76}, },
            {{48, 122, -207}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 68, -23}, {69, 69, 234}, {70, 100, -35}, {101, 101, 235}, {102, 122, 76}, },
            {{48, 122, -213}, },
            {{48, 57, 213}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 57, 72}, {65, 65, 236}, {66, 90, 73}, {97, 97, 237}, {98, 122, 76}, },
            {{48, 122, -220}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 72, -25}, {73, 73, 238}, {74, 104, -127}, {105, 105, 239}, {106, 122, 76}, },
            {{48, 122, -224}, },
            {{48, 68, -23}, {69, 69, 240}, {70, 100, -35}, {101, 101, 241}, {102, 122, 76}, },
            {{48, 122, -226}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 67, -76}, {68, 68, 242}, {69, 99, -76}, {100, 100, 243}, {101, 122, 76}, },
            {{48, 122, -230}, },
            {{48, 57, 72}, {65, 65, 244}, {66, 90, 73}, {97, 97, 245}, {98, 122, 76}, },
            {{48, 122, -232}, },
            {{48, 70, -81}, {71, 71, 246}, {72, 102, -81}, {103, 103, 247}, {104, 122, 76}, },
            {{48, 122, -234}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 77, -22}, {78, 78, 248}, {79, 109, -97}, {110, 110, 249}, {111, 122, 76}, },
            {{48, 122, -238}, },
            {{48, 78, -31}, {79, 79, 250}, {80, 110, -31}, {111, 111, 251}, {112, 122, 76}, },
            {{48, 122, -240}, },
            {{48, 81, -34}, {82, 82, 252}, {83, 113, -34}, {114, 114, 253}, {115, 122, 76}, },
            {{48, 122, -242}, },
            {{48, 84, -122}, {85, 85, 254}, {86, 116, -122}, {117, 117, 255}, {118, 122, 76}, },
            {{48, 122, -244}, },
            {{48, 57, 72}, {65, 76, 73}, {77, 77, 256}, {78, 90, 73}, {97, 108, 76}, {109, 109, 257}, {110, 122, 76}, },
            {{48, 122, -246}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 77, -22}, {78, 78, 258}, {79, 109, -97}, {110, 110, 259}, {111, 122, 76}, },
            {{48, 122, -252}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 81, -34}, {82, 82, 260}, {83, 113, -34}, {114, 114, 261}, {115, 122, 76}, },
            {{48, 122, -256}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 68, -23}, {69, 69, 262}, {70, 100, -35}, {101, 101, 263}, {102, 122, 76}, },
            {{48, 122, -262}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
        }
        { // COMMENT
            {{0, 41, 1}, {42, 42, 2}, {43, 46, 1}, {47, 47, 3}, {48, 127, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 127, 1}, },
            {{47, 47, 4}, },
            {{42, 42, 5}, },
            {},
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {-1, 34, 34, 34, 34, -1, 25, 26, 38, 38, 27, 38, 23, 38, 32, 29, 22, 36, 36, 36, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 30, 31, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 34, -1, 35, 41, 24, 33, 40, -1, -1, 32, 28, 36, 36, 36, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 19, 21, 19, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 5, 21, 5, 21, 21, 21, 21, 21, 21, 21, 11, 21, 11, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 33, -1, -1, -1, 39, 39, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 13, 13, 21, 21, 9, 9, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 15, 15, 21, 21, -1, -1, 33, 39, 21, 21, 21, 21, 21, 21, 10, 10, 7, 7, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 2, 2, 21, 21, 6, 6, 20, 20, 21, 21, 33, 4, 4, 12, 12, 21, 21, 20, 20, 21, 21, 21, 21, 17, 17, 21, 21, 21, 21, 21, 21, 8, 8, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 1, 1, 3, 3, 21, 21, 0, 0, 21, 21, 14, 14, 16, 16, 21, 21, 18, 18, },
        // COMMENT
        {42, 42, 43, 44, 41, 40, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMMENT = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
